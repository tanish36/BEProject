[{"D:\\BEProject\\frontend\\src\\index.js":"1","D:\\BEProject\\frontend\\src\\App.js":"2","D:\\BEProject\\frontend\\src\\Content.js":"3","D:\\BEProject\\frontend\\src\\Sidebar.js":"4","D:\\BEProject\\frontend\\src\\Header.js":"5","D:\\BEProject\\frontend\\src\\AddContent.js":"6","D:\\BEProject\\frontend\\src\\Contest.js":"7","D:\\BEProject\\frontend\\src\\Profile.js":"8","D:\\BEProject\\frontend\\src\\Problem.js":"9","D:\\BEProject\\frontend\\src\\Discuss.js":"10","D:\\BEProject\\frontend\\src\\components\\Signup.js":"11","D:\\BEProject\\frontend\\src\\components\\Signin.js":"12","D:\\BEProject\\frontend\\src\\Dougnut.js":"13","D:\\BEProject\\frontend\\src\\Line.js":"14","D:\\BEProject\\frontend\\src\\ProblemBody.js":"15","D:\\BEProject\\frontend\\src\\DiscussResponse.js":"16","D:\\BEProject\\frontend\\src\\DiscussHeader.js":"17","D:\\BEProject\\frontend\\src\\services\\auth.service.js":"18","D:\\BEProject\\frontend\\src\\InputOutput.js":"19","D:\\BEProject\\frontend\\src\\DiscussAnswer.js":"20","D:\\BEProject\\frontend\\src\\services\\discuss.service.js":"21","D:\\BEProject\\frontend\\src\\services\\content.service.js":"22","D:\\BEProject\\frontend\\src\\Alertdism.js":"23","D:\\BEProject\\frontend\\src\\ContentEntry.js":"24","D:\\BEProject\\frontend\\src\\AddContest.js":"25","D:\\BEProject\\frontend\\src\\AllProblem.js":"26","D:\\BEProject\\frontend\\src\\services\\contest.service.js":"27"},{"size":345,"mtime":1611296188237,"results":"28","hashOfConfig":"29"},{"size":2457,"mtime":1612778744557,"results":"30","hashOfConfig":"29"},{"size":1914,"mtime":1611479097342,"results":"31","hashOfConfig":"29"},{"size":1804,"mtime":1612778744563,"results":"32","hashOfConfig":"29"},{"size":1510,"mtime":1611298418978,"results":"33","hashOfConfig":"29"},{"size":4562,"mtime":1611470361996,"results":"34","hashOfConfig":"29"},{"size":3406,"mtime":1612805819471,"results":"35","hashOfConfig":"29"},{"size":4211,"mtime":1611304267579,"results":"36","hashOfConfig":"29"},{"size":2682,"mtime":1612778744560,"results":"37","hashOfConfig":"29"},{"size":5219,"mtime":1611480425590,"results":"38","hashOfConfig":"29"},{"size":6846,"mtime":1611470982425,"results":"39","hashOfConfig":"29"},{"size":5252,"mtime":1611471160225,"results":"40","hashOfConfig":"29"},{"size":668,"mtime":1611296188235,"results":"41","hashOfConfig":"29"},{"size":1041,"mtime":1611296188236,"results":"42","hashOfConfig":"29"},{"size":2806,"mtime":1611296188236,"results":"43","hashOfConfig":"29"},{"size":552,"mtime":1611396979026,"results":"44","hashOfConfig":"29"},{"size":1097,"mtime":1611480075864,"results":"45","hashOfConfig":"29"},{"size":908,"mtime":1611432445842,"results":"46","hashOfConfig":"29"},{"size":720,"mtime":1611296188236,"results":"47","hashOfConfig":"29"},{"size":2132,"mtime":1611431780209,"results":"48","hashOfConfig":"29"},{"size":1913,"mtime":1611432464185,"results":"49","hashOfConfig":"29"},{"size":1240,"mtime":1611469680292,"results":"50","hashOfConfig":"29"},{"size":579,"mtime":1611470439314,"results":"51","hashOfConfig":"29"},{"size":1726,"mtime":1611478271526,"results":"52","hashOfConfig":"29"},{"size":8304,"mtime":1612778744545,"results":"53","hashOfConfig":"29"},{"size":1861,"mtime":1612778744546,"results":"54","hashOfConfig":"29"},{"size":2325,"mtime":1612806085201,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"lil2rs",{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\BEProject\\frontend\\src\\index.js",[],["119","120"],"D:\\BEProject\\frontend\\src\\App.js",["121","122","123"],"D:\\BEProject\\frontend\\src\\Content.js",["124","125"],"import React, { useEffect } from 'react'\r\nimport { Row, Col, Card } from 'react-bootstrap';\r\nimport { Player, ControlBar, PlaybackRateMenuButton, VolumeMenuButton } from 'video-react'\r\nimport './Content.css';\r\nimport \"../node_modules/video-react/dist/video-react.css\";\r\n\r\nfunction Content({ topic, content, vlink }) {\r\n\r\n    return (\r\n\r\n        <div className=\"Content__Text\">\r\n            <Card>\r\n                <Card.Body>\r\n                    <Card.Title className=\"text-center\">Topic</Card.Title>\r\n                    <Col>\r\n                        <Card >\r\n                            <Card.Header>{topic}</Card.Header>\r\n                            <Card.Body>\r\n                                <Card.Text>\r\n                                    <p>{content}</p>\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <div className=\"Content__Video\">\r\n                        <Col>\r\n                            <Card>\r\n                                <Card.Header> Video </Card.Header>\r\n                                <div className=\"Content__VideoAlign\">\r\n                                    <Player playsInline fluid={false} width={700} height={300}>\r\n                                        <source src={vlink} />\r\n                                        <ControlBar>\r\n                                            <PlaybackRateMenuButton rates={[2, 1.5, 1]} order={7.1} />\r\n                                            <VolumeMenuButton disabled />\r\n                                        </ControlBar>\r\n                                    </Player>\r\n                                </div>\r\n                            </Card>\r\n                        </Col>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Content\r\n","D:\\BEProject\\frontend\\src\\Sidebar.js",["126"],"D:\\BEProject\\frontend\\src\\Header.js",[],"D:\\BEProject\\frontend\\src\\AddContent.js",["127","128","129","130"],"import React, { useState } from 'react'\r\nimport './AddContent.css'\r\nimport { Form, Row, Col, Button, Card, Alert } from 'react-bootstrap'\r\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport ContentService from './services/content.service'\r\nimport Alertdism from './Alertdism'\r\n\r\nfunction AddContent() {\r\n\r\n    let msgform = null;\r\n    const [success, setsuccess] = useState(2);\r\n\r\n    function handleClick(event) {\r\n        event.preventDefault();\r\n        //Section\r\n        console.log(event.target[0].value)\r\n        var topic_module = event.target[0].value\r\n        //Topic\r\n        console.log(event.target[1].value);\r\n        var topic_name = event.target[1].value\r\n        //vlink\r\n        console.log(event.target[2].value);\r\n        var topic_vlink = event.target[2].value\r\n        //content\r\n        console.log(event.target[3].value);\r\n        var topic_content = event.target[3].value;\r\n\r\n        ContentService.addcontent(topic_module, topic_name, topic_vlink, topic_content).then((response) => {\r\n            setsuccess(1)\r\n        }, (error) => {\r\n            setsuccess(0)\r\n        })\r\n\r\n        msgform.reset();\r\n    }\r\n\r\n    return (\r\n        <div className=\"AddContent\">\r\n            {\r\n                localStorage.getItem(\"user\") != undefined ?\r\n                    <>\r\n                        {success == 1 ? <Alertdism setsucess={setsuccess} theme={\"success\"} content={\"Topic Successfully Added\"} heading={\"Success\"} /> :\r\n\r\n                            success == 0 ? <Alertdism setsucess={setsuccess} theme={\"danger\"} content={\"Some error occured please try again\"} heading={\"Failure\"} /> : null\r\n                        }\r\n                        <Card className=\"text-center\">\r\n                            <Card.Body>\r\n                                <Card.Title>Content</Card.Title>\r\n\r\n                                <Card.Text>\r\n                                </Card.Text>\r\n                                <Form id=\"myForm\" className=\"form\" ref={form => msgform = form} onSubmit={handleClick}>\r\n\r\n                                    <Form.Group as={Row} controlId=\"Form.SelectCustom\">\r\n                                        <Form.Label column sm={2} >Section</Form.Label>\r\n                                        <Col sm={10}>\r\n                                            <Form.Control as=\"select\" custom>\r\n                                                <option>DataStructures</option>\r\n                                                <option>Algorithms</option>\r\n                                            </Form.Control>\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Row} controlId=\"formHorizontalTopic\">\r\n                                        <Form.Label column sm={2}>\r\n                                            Topic\r\n                                </Form.Label>\r\n                                        <Col sm={10}>\r\n                                            <Form.Control type=\"text\" placeholder=\"Binary Search\" />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Row} controlId=\"formHorizontalVideo\">\r\n                                        <Form.Label column sm={2}>\r\n                                            VideoLink\r\n                                </Form.Label>\r\n\r\n                                        <Col sm={10}>\r\n                                            <Form.Control type=\"link\" placeholder=\"Video Link\" />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n\r\n                                    <Form.Group controlId=\"Form.ControlContent\">\r\n                                        <Form.Label >Content</Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows={10} />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Row}>\r\n                                        <Col sm={{ span: 10 }}>\r\n                                            <Button type=\"submit\">Submit</Button>\r\n                                        </Col>\r\n                                    </Form.Group>\r\n                                </Form>\r\n\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </> : <Redirect to=\"/Signin\" />\r\n            }\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default AddContent\r\n","D:\\BEProject\\frontend\\src\\Contest.js",["131","132","133","134"],"D:\\BEProject\\frontend\\src\\Profile.js",["135"],"import React from 'react';\r\nimport { Card, Row, Col, Form, Button, Container } from 'react-bootstrap';\r\nimport './Profile.css';\r\nimport DoughnutGraph from './Dougnut'\r\nimport LineGraph from './Line'\r\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom.min';\r\n\r\nfunction Profile() {\r\n\r\n    return (\r\n        <div className=\"Profile\">\r\n            {\r\n                localStorage.getItem(\"user\") ?\r\n                    <Container>\r\n                        <div className=\"Profile__details\">\r\n                            <Row>\r\n\r\n                                <Col>\r\n                                    <Card className=\"text-center\">\r\n                                        <Card.Body>\r\n                                            <Card.Title>Submissions</Card.Title>\r\n\r\n                                            <Card.Text>\r\n                                                <DoughnutGraph />\r\n                                            </Card.Text>\r\n\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </Col>\r\n\r\n                                <Col>\r\n                                    <Card>\r\n                                        <Card.Header>Profile</Card.Header>\r\n                                        <Card.Body>\r\n\r\n                                            <Form>\r\n                                                <fieldset disabled>\r\n\r\n                                                    <Form.Row>\r\n                                                        <Form.Group as={Col} >\r\n                                                            <Form.Label>FirstName</Form.Label>\r\n                                                            <Form.Control type=\"text\" placeholder={JSON.parse(localStorage.getItem(\"user\")).firstname} />\r\n                                                        </Form.Group>\r\n\r\n                                                        <Form.Group as={Col} >\r\n                                                            <Form.Label>Lastname</Form.Label>\r\n                                                            <Form.Control type=\"text\" placeholder={JSON.parse(localStorage.getItem(\"user\")).lastname} />\r\n                                                        </Form.Group>\r\n                                                    </Form.Row>\r\n\r\n                                                    <Form.Group>\r\n                                                        <Form.Label>Username</Form.Label>\r\n                                                        <Form.Control placeholder={JSON.parse(localStorage.getItem(\"user\")).email} />\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group>\r\n                                                        <Form.Label>Rank</Form.Label>\r\n                                                        <Form.Control placeholder={JSON.parse(localStorage.getItem(\"user\")).rank} />\r\n                                                    </Form.Group>\r\n\r\n                                                </fieldset>\r\n                                            </Form>\r\n\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col style={{ height: '200px' }}>\r\n                                    <Card className=\"text-center\">\r\n                                        <Card.Body>\r\n                                            <Card.Title>Performance</Card.Title>\r\n\r\n                                            <Card.Text>\r\n                                                <LineGraph />\r\n                                            </Card.Text>\r\n\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    </Container> : <Redirect to=\"/Signin\" />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","D:\\BEProject\\frontend\\src\\Problem.js",["136"],"D:\\BEProject\\frontend\\src\\Discuss.js",["137","138","139"],"import React, { useState, useEffect } from 'react'\r\nimport { Card, ListGroup, Form, Row, Col, Button } from 'react-bootstrap'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport DiscussHeader from './DiscussHeader'\r\nimport DiscussResponse from './DiscussResponse'\r\nimport DiscussService from './services/discuss.service';\r\n\r\nfunction Discuss() {\r\n\r\n    const [discussionId, setdiscussionId] = useState(\"\")\r\n    const [Clicked, setClicked] = useState(false)\r\n    const [isLoading, setisLoading] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        setisLoading(true);\r\n\r\n        DiscussService.getDiscussionTopics().then((response) => {\r\n            setisLoading(false);\r\n        }, (error) => {\r\n            setisLoading(false);\r\n        })\r\n\r\n    }, [localStorage.getItem(\"Discuss\")]);\r\n\r\n\r\n    function handleClick(discussId) {\r\n\r\n        setdiscussionId(discussId);\r\n\r\n        console.log(\"In Discuss handle Click \" + discussId)\r\n\r\n        setisLoading(true);\r\n\r\n        // Ask axios to get the data from the backend\r\n\r\n\r\n\r\n        setisLoading(false);\r\n        setClicked(true);\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        var topic = event.target[0].value;\r\n        var content = event.target[1].value;\r\n        var email = JSON.parse(localStorage.getItem(\"user\")).email\r\n\r\n        DiscussService.addDiscussion(email, topic, content).then((response) => {\r\n\r\n        }, (error) => {\r\n\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <div>{\r\n\r\n            isLoading ?\r\n                <div className=\"Loader\">\r\n                    <CircularProgress />\r\n                </div> : null\r\n        }\r\n            {\r\n\r\n                Clicked ? <>\r\n                    <Discussion discussId={discussionId} />\r\n                </>\r\n                    :\r\n                    <>\r\n                        <Card>\r\n                            <Card.Header>Ask a Question</Card.Header>\r\n                            <Card.Body>\r\n                                <Form onSubmit={handleSubmit}>\r\n                                    <Form.Group as={Row} controlId=\"formHorizontalVideo\">\r\n                                        <Form.Label column sm={2}>\r\n                                            Topic\r\n                                        </Form.Label>\r\n\r\n                                        <Col sm={5}>\r\n                                            <Form.Control type=\"link\" placeholder=\"Topic of Question\" />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"Form.ControlContent\">\r\n                                        <Form.Label >Doubt/Question</Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows={2} />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Row}>\r\n                                        <Col sm={{ span: 10 }}>\r\n                                            <Button type=\"submit\">Submit</Button>\r\n                                        </Col>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Card.Body>\r\n                        </Card>\r\n\r\n                        <br />\r\n\r\n                        <Card>\r\n                            <Card.Header>Discuss</Card.Header>\r\n                            <ListGroup variant=\"flush\">\r\n                                {localStorage.getItem(\"Discuss\") && JSON.parse(localStorage.getItem(\"Discuss\")).map(dis => <ListGroup.Item action onClick={() => handleClick(dis.discussionId)} disabled={isLoading} >{dis.title}</ListGroup.Item>)}\r\n                            </ListGroup>\r\n                        </Card>\r\n                    </>\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\nfunction Discussion({ discussId }) {\r\n\r\n    const [discussion, setdiscussion] = useState(null);\r\n    const [discussionResponses, setdiscussionResponses] = useState([])\r\n    // const [user, setuser] = useState()\r\n\r\n    useEffect(() => {\r\n\r\n        if (localStorage.getItem(discussId) == undefined) {\r\n\r\n            DiscussService.getDiscussion(discussId).then((response) => {\r\n                setdiscussion(response[0])\r\n\r\n            }, (error) => {\r\n\r\n            })\r\n        } else {\r\n            setdiscussion(JSON.parse(localStorage.getItem(discussId))[0])\r\n        }\r\n\r\n        //console.log(discussion)\r\n\r\n        DiscussService.getDiscussionResponses(discussId).then((response) => {\r\n            //  console.log(response);\r\n            setdiscussionResponses([...response])\r\n        }, (error) => {\r\n\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n    }, [discussion])\r\n\r\n    if (discussion != null) {\r\n        return <>\r\n            <DiscussHeader Topic={discussion.title} discussId={discussion.discussionId} email={discussion.email} Content={discussion.content} />\r\n            { discussionResponses.map(dis => <DiscussResponse email={dis.email} Title={dis.title} Content={dis.content} />)}\r\n        </>\r\n    }\r\n\r\n\r\n\r\n    return <div className=\"Loader\">\r\n        < CircularProgress />\r\n    </div >\r\n}\r\n\r\nexport default Discuss\r\n","D:\\BEProject\\frontend\\src\\components\\Signup.js",["140","141","142"],"import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AuthService from '../services/auth.service';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Alertdism from '../Alertdism'\r\nimport './Signup.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function SignUp() {\r\n    let history = useHistory();\r\n    let loading = false;\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        loading = true;\r\n\r\n        let firstname = event.target[0].value;\r\n        let lastname = event.target[2].value;\r\n        let email = event.target[4].value;\r\n        let password = event.target[6].value;\r\n\r\n\r\n        AuthService.register(firstname, lastname, email, password).then((response) => {\r\n            setsuccess(1)\r\n            //history.push(\"/Signin\");\r\n        }, (error) => {\r\n            setsuccess(0)\r\n            //history.push(\"/Signup\");\r\n            console.log(error);\r\n        });\r\n\r\n    }\r\n\r\n    const [success, setsuccess] = useState(2)\r\n\r\n    return (\r\n        <>{loading ?\r\n            <div className=\"Loader\">\r\n                <CircularProgress />\r\n            </div>\r\n\r\n            : <></>}\r\n            {success == 1 ? <Alertdism setsucess={setsuccess} theme={\"success\"} content={\"User Successfully Registered\"} heading={\"Success\"} /> :\r\n\r\n                success == 0 ? <Alertdism setsucess={setsuccess} theme={\"danger\"} content={\"User Already Exists\"} heading={\"Failure\"} /> : null\r\n            }\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign up\r\n                </Typography>\r\n\r\n                    <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    autoComplete=\"fname\"\r\n                                    name=\"firstName\"\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"firstName\"\r\n                                    label=\"First Name\"\r\n                                    autoFocus\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"lastName\"\r\n                                    label=\"Last Name\"\r\n                                    name=\"lastName\"\r\n                                    autoComplete=\"lname\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"email\"\r\n                                    label=\"Email Address\"\r\n                                    name=\"email\"\r\n                                    autoComplete=\"email\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    autoComplete=\"current-password\"\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        {\r\n                            loading ? <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.submit}\r\n                                disabled\r\n                            >\r\n                                Sign Up\r\n                        </Button> :\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className={classes.submit}\r\n                                >\r\n                                    Sign Up\r\n                                </Button>\r\n                        }\r\n\r\n                        <Grid container justify=\"flex-end\">\r\n                            <Grid item>\r\n                                <Link href={\"/Signin\"} variant=\"body2\">\r\n                                    Already have an account? Sign in\r\n                            </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </div>\r\n                <Box mt={5}>\r\n                </Box>\r\n            </Container>\r\n        </>\r\n    );\r\n}","D:\\BEProject\\frontend\\src\\components\\Signin.js",["143","144"],"import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport AuthService from '../services/auth.service';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Alertdism from '../Alertdism'\r\nimport './Signup.css';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function SignIn() {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    // TO - DO Implement Login Feature ..\r\n    const [loading, setloading] = useState(false)\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        setloading(true);\r\n\r\n        let email = event.target[0].value;\r\n        let password = event.target[2].value;\r\n\r\n        AuthService.login(email, password).then((response) => {\r\n            console.log(response);\r\n            setloading(false);\r\n            setsuccess(1);\r\n            history.push(\"/Welcome\");\r\n            window.location.reload();\r\n        }, (error) => {\r\n            setsuccess(0);\r\n        });\r\n\r\n        setloading(false);\r\n\r\n    }\r\n\r\n    const [success, setsuccess] = useState(2)\r\n\r\n\r\n    return (\r\n        <>{loading ?\r\n            <div className=\"Loader\">\r\n                <CircularProgress />\r\n            </div>\r\n\r\n            : <></>}\r\n\r\n            {success == 1 ? <Alertdism setsucess={setsuccess} theme={\"success\"} content={\"User Successfully Registered\"} heading={\"Success\"} /> :\r\n\r\n                success == 0 ? <Alertdism setsucess={setsuccess} theme={\"danger\"} content={\"Check Username and Password\"} heading={\"Failure\"} /> : null\r\n            }\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign in\r\n                     </Typography>\r\n                    <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Email Address\"\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            autoFocus\r\n                        />\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                        />\r\n                        {loading ? <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            disabled\r\n                        >\r\n                            Sign In\r\n                        </Button> :\r\n                            <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.submit}\r\n                            >\r\n                                Sign In\r\n                        </Button>\r\n                        }\r\n                        <Grid container>\r\n                            <Grid item>\r\n                                <Link href=\"/Signup\" variant=\"body2\">\r\n                                    {\"Don't have an account? Sign Up\"}\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </div>\r\n            </Container>\r\n        </>\r\n\r\n    );\r\n}","D:\\BEProject\\frontend\\src\\Dougnut.js",[],"D:\\BEProject\\frontend\\src\\Line.js",[],"D:\\BEProject\\frontend\\src\\ProblemBody.js",["145"],"import React, { useState } from 'react'\r\nimport { Form, Card, Row, Col, Button } from 'react-bootstrap';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport InputOutput from './InputOutput';\r\n\r\nfunction ProblemBody({ Topic, Content, Input, Output }) {\r\n\r\n    const [click, setclick] = useState(false)\r\n\r\n    return (\r\n        <div>\r\n            <Card >\r\n                <Card.Body>\r\n                    <Card.Title className=\"text-center\">{Topic}</Card.Title>\r\n                    <Card>\r\n                        <Card.Header>Problem Statement</Card.Header>\r\n                        <Card.Body>\r\n\r\n                            <Card.Text>\r\n                                {Content}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <br />\r\n                    <Card>\r\n                        <Card.Header>Input</Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                {Input}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <br />\r\n                    <Card>\r\n                        <Card.Header>Output</Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                {Output}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <br />\r\n\r\n                    <Card>\r\n                        <Card.Header>Example</Card.Header>\r\n                        <Card.Body>\r\n\r\n                            <InputOutput Input={\"Hello World\"} Output={\"Hello how are you ?\"} />\r\n\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <br />\r\n\r\n                    <Form>\r\n                        <Form.File id=\"formcheck-api-regular\">\r\n                            <Form.File.Label>Upload a file</Form.File.Label>\r\n                            <Form.File.Input />\r\n                        </Form.File>\r\n                        <br />\r\n                        <Form.Group as={Row}>\r\n\r\n                            <Col sm={{ span: 2 }}>\r\n                                {click ? <Button type=\"submit\" disabled>Submit</Button> : <Button type=\"submit\">Submit</Button>}\r\n                            </Col>\r\n                        </Form.Group>\r\n                        {click ?\r\n                            <div className=\"Loader\">\r\n                                <CircularProgress />\r\n                            </div>\r\n\r\n                            : <></>}\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProblemBody\r\n",["146","147"],"D:\\BEProject\\frontend\\src\\DiscussResponse.js",[],"D:\\BEProject\\frontend\\src\\DiscussHeader.js",[],"D:\\BEProject\\frontend\\src\\services\\auth.service.js",[],"D:\\BEProject\\frontend\\src\\InputOutput.js",[],"D:\\BEProject\\frontend\\src\\DiscussAnswer.js",[],"D:\\BEProject\\frontend\\src\\services\\discuss.service.js",[],"D:\\BEProject\\frontend\\src\\services\\content.service.js",[],"D:\\BEProject\\frontend\\src\\Alertdism.js",[],"D:\\BEProject\\frontend\\src\\ContentEntry.js",[],"D:\\BEProject\\frontend\\src\\AddContest.js",["148","149","150","151"],"D:\\BEProject\\frontend\\src\\AllProblem.js",["152"],"D:\\BEProject\\frontend\\src\\services\\contest.service.js",[],{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":15,"column":8,"nodeType":"159","messageId":"160","endLine":15,"endColumn":15},{"ruleId":"157","severity":1,"message":"161","line":22,"column":7,"nodeType":"159","messageId":"160","endLine":22,"endColumn":14},{"ruleId":"157","severity":1,"message":"162","line":23,"column":10,"nodeType":"159","messageId":"160","endLine":23,"endColumn":14},{"ruleId":"157","severity":1,"message":"163","line":1,"column":17,"nodeType":"159","messageId":"160","endLine":1,"endColumn":26},{"ruleId":"157","severity":1,"message":"164","line":2,"column":10,"nodeType":"159","messageId":"160","endLine":2,"endColumn":13},{"ruleId":"165","severity":1,"message":"166","line":25,"column":78,"nodeType":"167","messageId":"168","endLine":25,"endColumn":80},{"ruleId":"157","severity":1,"message":"169","line":3,"column":40,"nodeType":"159","messageId":"160","endLine":3,"endColumn":45},{"ruleId":"165","severity":1,"message":"170","line":40,"column":46,"nodeType":"167","messageId":"168","endLine":40,"endColumn":48},{"ruleId":"165","severity":1,"message":"166","line":42,"column":34,"nodeType":"167","messageId":"168","endLine":42,"endColumn":36},{"ruleId":"165","severity":1,"message":"166","line":44,"column":37,"nodeType":"167","messageId":"168","endLine":44,"endColumn":39},{"ruleId":"171","severity":1,"message":"172","line":37,"column":112,"nodeType":"173","messageId":"174","endLine":37,"endColumn":114},{"ruleId":"171","severity":1,"message":"172","line":57,"column":112,"nodeType":"173","messageId":"174","endLine":57,"endColumn":114},{"ruleId":"175","severity":1,"message":"176","line":91,"column":8,"nodeType":"177","endLine":91,"endColumn":10,"suggestions":"178"},{"ruleId":"165","severity":1,"message":"166","line":115,"column":81,"nodeType":"167","messageId":"168","endLine":115,"endColumn":83},{"ruleId":"157","severity":1,"message":"179","line":2,"column":32,"nodeType":"159","messageId":"160","endLine":2,"endColumn":38},{"ruleId":"157","severity":1,"message":"180","line":7,"column":19,"nodeType":"159","messageId":"160","endLine":7,"endColumn":27},{"ruleId":"175","severity":1,"message":"181","line":24,"column":9,"nodeType":"182","endLine":24,"endColumn":40},{"ruleId":"165","severity":1,"message":"166","line":123,"column":45,"nodeType":"167","messageId":"168","endLine":123,"endColumn":47},{"ruleId":"175","severity":1,"message":"183","line":143,"column":8,"nodeType":"177","endLine":143,"endColumn":10,"suggestions":"184"},{"ruleId":"157","severity":1,"message":"161","line":40,"column":9,"nodeType":"159","messageId":"160","endLine":40,"endColumn":16},{"ruleId":"165","severity":1,"message":"166","line":75,"column":22,"nodeType":"167","messageId":"168","endLine":75,"endColumn":24},{"ruleId":"165","severity":1,"message":"166","line":77,"column":25,"nodeType":"167","messageId":"168","endLine":77,"endColumn":27},{"ruleId":"165","severity":1,"message":"166","line":77,"column":22,"nodeType":"167","messageId":"168","endLine":77,"endColumn":24},{"ruleId":"165","severity":1,"message":"166","line":79,"column":25,"nodeType":"167","messageId":"168","endLine":79,"endColumn":27},{"ruleId":"157","severity":1,"message":"180","line":8,"column":19,"nodeType":"159","messageId":"160","endLine":8,"endColumn":27},{"ruleId":"153","replacedBy":"185"},{"ruleId":"155","replacedBy":"186"},{"ruleId":"157","severity":1,"message":"169","line":3,"column":40,"nodeType":"159","messageId":"160","endLine":3,"endColumn":45},{"ruleId":"165","severity":1,"message":"170","line":61,"column":46,"nodeType":"167","messageId":"168","endLine":61,"endColumn":48},{"ruleId":"165","severity":1,"message":"166","line":63,"column":35,"nodeType":"167","messageId":"168","endLine":63,"endColumn":37},{"ruleId":"165","severity":1,"message":"166","line":65,"column":37,"nodeType":"167","messageId":"168","endLine":65,"endColumn":39},{"ruleId":"187","severity":1,"message":"188","line":36,"column":139,"nodeType":"189","messageId":"190","endLine":36,"endColumn":163,"fix":"191"},"no-native-reassign",["192"],"no-negated-in-lhs",["193"],"no-unused-vars","'Content' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","'user' is assigned a value but never used.","'useEffect' is defined but never used.","'Row' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Alert' is defined but never used.","Expected '!==' and instead saw '!='.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'timestamp'. Either include it or remove the dependency array.","ArrayExpression",["194"],"'Button' is defined but never used.","'setclick' is assigned a value but never used.","React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","React Hook useEffect has a missing dependency: 'discussId'. Either include it or remove the dependency array. If 'setdiscussion' needs the current value of 'discussId', you can also switch to useReducer instead of useState and read 'discussId' in the reducer.",["195"],["192"],["193"],"no-whitespace-before-property","Unexpected whitespace before property problem_io.","MemberExpression","unexpectedWhitespace",{"range":"196","text":"197"},"no-global-assign","no-unsafe-negation",{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},[990,992],".","Update the dependencies array to be: [timestamp]",{"range":"202","text":"203"},"Update the dependencies array to be: [discussId]",{"range":"204","text":"205"},[2681,2683],"[timestamp]",[4705,4707],"[discussId]"]