[{"D:\\BEProject\\frontend\\src\\index.js":"1","D:\\BEProject\\frontend\\src\\App.js":"2","D:\\BEProject\\frontend\\src\\Content.js":"3","D:\\BEProject\\frontend\\src\\Sidebar.js":"4","D:\\BEProject\\frontend\\src\\Header.js":"5","D:\\BEProject\\frontend\\src\\AddContent.js":"6","D:\\BEProject\\frontend\\src\\Contest.js":"7","D:\\BEProject\\frontend\\src\\Profile.js":"8","D:\\BEProject\\frontend\\src\\Problem.js":"9","D:\\BEProject\\frontend\\src\\Discuss.js":"10","D:\\BEProject\\frontend\\src\\components\\Signup.js":"11","D:\\BEProject\\frontend\\src\\components\\Signin.js":"12","D:\\BEProject\\frontend\\src\\Dougnut.js":"13","D:\\BEProject\\frontend\\src\\Line.js":"14","D:\\BEProject\\frontend\\src\\ProblemBody.js":"15","D:\\BEProject\\frontend\\src\\DiscussResponse.js":"16","D:\\BEProject\\frontend\\src\\DiscussHeader.js":"17","D:\\BEProject\\frontend\\src\\services\\auth.service.js":"18","D:\\BEProject\\frontend\\src\\InputOutput.js":"19","D:\\BEProject\\frontend\\src\\DiscussAnswer.js":"20","D:\\BEProject\\frontend\\src\\services\\discuss.service.js":"21","D:\\BEProject\\frontend\\src\\services\\content.service.js":"22","D:\\BEProject\\frontend\\src\\Alertdism.js":"23","D:\\BEProject\\frontend\\src\\ContentEntry.js":"24","D:\\BEProject\\frontend\\src\\AddContest.js":"25","D:\\BEProject\\frontend\\src\\AllProblem.js":"26","D:\\BEProject\\frontend\\src\\services\\contest.service.js":"27","D:\\BEProject\\frontend\\src\\components\\Compiler\\Compiler.js":"28","D:\\BEProject\\frontend\\src\\services\\compiler.service.js":"29","F:\\BE-Pro\\BEProject\\frontend\\src\\index.js":"30","F:\\BE-Pro\\BEProject\\frontend\\src\\App.js":"31","F:\\BE-Pro\\BEProject\\frontend\\src\\Contest.js":"32","F:\\BE-Pro\\BEProject\\frontend\\src\\Profile.js":"33","F:\\BE-Pro\\BEProject\\frontend\\src\\AddContent.js":"34","F:\\BE-Pro\\BEProject\\frontend\\src\\AddContest.js":"35","F:\\BE-Pro\\BEProject\\frontend\\src\\AllProblem.js":"36","F:\\BE-Pro\\BEProject\\frontend\\src\\Discuss.js":"37","F:\\BE-Pro\\BEProject\\frontend\\src\\Content.js":"38","F:\\BE-Pro\\BEProject\\frontend\\src\\ContentEntry.js":"39","F:\\BE-Pro\\BEProject\\frontend\\src\\Header.js":"40","F:\\BE-Pro\\BEProject\\frontend\\src\\Sidebar.js":"41","F:\\BE-Pro\\BEProject\\frontend\\src\\components\\Signup.js":"42","F:\\BE-Pro\\BEProject\\frontend\\src\\components\\Signin.js":"43","F:\\BE-Pro\\BEProject\\frontend\\src\\Problem.js":"44","F:\\BE-Pro\\BEProject\\frontend\\src\\Dougnut.js":"45","F:\\BE-Pro\\BEProject\\frontend\\src\\Line.js":"46","F:\\BE-Pro\\BEProject\\frontend\\src\\DiscussResponse.js":"47","F:\\BE-Pro\\BEProject\\frontend\\src\\DiscussHeader.js":"48","F:\\BE-Pro\\BEProject\\frontend\\src\\Alertdism.js":"49","F:\\BE-Pro\\BEProject\\frontend\\src\\services\\auth.service.js":"50","F:\\BE-Pro\\BEProject\\frontend\\src\\services\\discuss.service.js":"51","F:\\BE-Pro\\BEProject\\frontend\\src\\services\\content.service.js":"52","F:\\BE-Pro\\BEProject\\frontend\\src\\services\\contest.service.js":"53","F:\\BE-Pro\\BEProject\\frontend\\src\\components\\Compiler\\Compiler.js":"54","F:\\BE-Pro\\BEProject\\frontend\\src\\DiscussAnswer.js":"55","F:\\BE-Pro\\BEProject\\frontend\\src\\services\\compiler.service.js":"56","F:\\BE-Pro\\BEProject\\frontend\\src\\CContest.js":"57","F:\\BE-Pro\\BEProject\\frontend\\src\\Homepage.js":"58"},{"size":345,"mtime":1611296188237,"results":"59","hashOfConfig":"60"},{"size":2457,"mtime":1612778744557,"results":"61","hashOfConfig":"60"},{"size":1914,"mtime":1611479097342,"results":"62","hashOfConfig":"60"},{"size":1804,"mtime":1612778744563,"results":"63","hashOfConfig":"60"},{"size":1510,"mtime":1611298418978,"results":"64","hashOfConfig":"60"},{"size":4562,"mtime":1613197315562,"results":"65","hashOfConfig":"60"},{"size":3639,"mtime":1612859197436,"results":"66","hashOfConfig":"60"},{"size":4211,"mtime":1611304267579,"results":"67","hashOfConfig":"60"},{"size":1791,"mtime":1613191899116,"results":"68","hashOfConfig":"60"},{"size":5219,"mtime":1611480425590,"results":"69","hashOfConfig":"60"},{"size":6846,"mtime":1611470982425,"results":"70","hashOfConfig":"60"},{"size":5252,"mtime":1611471160225,"results":"71","hashOfConfig":"60"},{"size":668,"mtime":1611296188235,"results":"72","hashOfConfig":"60"},{"size":1041,"mtime":1611296188236,"results":"73","hashOfConfig":"60"},{"size":2806,"mtime":1611296188236,"results":"74","hashOfConfig":"60"},{"size":552,"mtime":1611396979026,"results":"75","hashOfConfig":"60"},{"size":1097,"mtime":1611480075864,"results":"76","hashOfConfig":"60"},{"size":908,"mtime":1611432445842,"results":"77","hashOfConfig":"60"},{"size":720,"mtime":1611296188236,"results":"78","hashOfConfig":"60"},{"size":2132,"mtime":1611431780209,"results":"79","hashOfConfig":"60"},{"size":1913,"mtime":1611432464185,"results":"80","hashOfConfig":"60"},{"size":1240,"mtime":1611469680292,"results":"81","hashOfConfig":"60"},{"size":579,"mtime":1613197292926,"results":"82","hashOfConfig":"60"},{"size":1726,"mtime":1611478271526,"results":"83","hashOfConfig":"60"},{"size":10956,"mtime":1612859549153,"results":"84","hashOfConfig":"60"},{"size":1861,"mtime":1612778744546,"results":"85","hashOfConfig":"60"},{"size":2803,"mtime":1613103894330,"results":"86","hashOfConfig":"60"},{"size":6444,"mtime":1613197289796,"results":"87","hashOfConfig":"60"},{"size":1324,"mtime":1613196749927,"results":"88","hashOfConfig":"60"},{"size":345,"mtime":1611651090228,"results":"89","hashOfConfig":"90"},{"size":2560,"mtime":1614672168281,"results":"91","hashOfConfig":"90"},{"size":3910,"mtime":1614595454204,"results":"92","hashOfConfig":"90"},{"size":4211,"mtime":1614672267464,"results":"93","hashOfConfig":"90"},{"size":4562,"mtime":1611651090221,"results":"94","hashOfConfig":"90"},{"size":10956,"mtime":1612890661299,"results":"95","hashOfConfig":"90"},{"size":1861,"mtime":1612727810166,"results":"96","hashOfConfig":"90"},{"size":5219,"mtime":1611916109801,"results":"97","hashOfConfig":"90"},{"size":1914,"mtime":1612690111819,"results":"98","hashOfConfig":"90"},{"size":1726,"mtime":1612690106810,"results":"99","hashOfConfig":"90"},{"size":1515,"mtime":1614672071666,"results":"100","hashOfConfig":"90"},{"size":1804,"mtime":1612627199003,"results":"101","hashOfConfig":"90"},{"size":6846,"mtime":1611651090228,"results":"102","hashOfConfig":"90"},{"size":5252,"mtime":1611651090227,"results":"103","hashOfConfig":"90"},{"size":1791,"mtime":1614575180437,"results":"104","hashOfConfig":"90"},{"size":668,"mtime":1611651090225,"results":"105","hashOfConfig":"90"},{"size":1041,"mtime":1611651090225,"results":"106","hashOfConfig":"90"},{"size":552,"mtime":1611651090224,"results":"107","hashOfConfig":"90"},{"size":1097,"mtime":1611651090224,"results":"108","hashOfConfig":"90"},{"size":579,"mtime":1614575180435,"results":"109","hashOfConfig":"90"},{"size":908,"mtime":1611651090230,"results":"110","hashOfConfig":"90"},{"size":1913,"mtime":1611651090230,"results":"111","hashOfConfig":"90"},{"size":1240,"mtime":1611651090230,"results":"112","hashOfConfig":"90"},{"size":2785,"mtime":1614672176362,"results":"113","hashOfConfig":"90"},{"size":6444,"mtime":1614575180443,"results":"114","hashOfConfig":"90"},{"size":2132,"mtime":1611651090224,"results":"115","hashOfConfig":"90"},{"size":1324,"mtime":1614575180444,"results":"116","hashOfConfig":"90"},{"size":2091,"mtime":1614595564499,"results":"117","hashOfConfig":"90"},{"size":18567,"mtime":1614675975550,"results":"118","hashOfConfig":"90"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},"lil2rs",{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"121"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"121"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"121"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"121"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"121"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"121"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"121"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"121"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"159"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"121"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"183","usedDeprecatedRules":"121"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},"10hfckq",{"filePath":"193","messages":"194","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"192"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"192"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"192"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"192"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"183","usedDeprecatedRules":"192"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"192"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"192"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"192"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"192"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"192"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"192"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"192"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"252","usedDeprecatedRules":"192"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\BEProject\\frontend\\src\\index.js",[],["255","256"],"D:\\BEProject\\frontend\\src\\App.js",["257","258","259"],"import SignUp from './components/Signup';\r\nimport React, { useState, useEffect } from 'react';\r\nimport SignIn from './components/Signin';\r\nimport { Route, Switch, useHistory } from \"react-router-dom\";\r\nimport Header from './Header';\r\nimport Sidebar from './Sidebar';\r\nimport Profile from './Profile';\r\nimport AddContent from './AddContent';\r\nimport Contest from './Contest';\r\nimport AddContest from './AddContest';\r\nimport AllProblem from './AllProblem'\r\n\r\nimport './App.css';\r\nimport { Container, Col, Row } from 'react-bootstrap';\r\nimport Content from './Content';\r\nimport Discuss from './Discuss';\r\nimport Problem from './Problem';\r\nimport ContentEntry from './ContentEntry';\r\n\r\nexport default function App() {\r\n\r\n  let history = useHistory();\r\n  const [user, setuser] = useState({});\r\n  const [loggedIn, setloggedIn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"user\")) {\r\n      setloggedIn(true);\r\n      setuser(localStorage.getItem(\"user\"));\r\n    } else {\r\n      setloggedIn(false);\r\n    }\r\n  }, [loggedIn])\r\n\r\n  return (\r\n    <>\r\n      <div className=\"MainConatiner\">\r\n        <Row>\r\n          {\r\n            (loggedIn) ?\r\n              <>\r\n                <Header logOut={() => setloggedIn(false)} loggedIn={loggedIn} />\r\n                <Col xs={2}>\r\n                  <div className=\"Sidebar\">\r\n                    <Sidebar isLoggedIn={loggedIn} />\r\n                  </div>\r\n                </Col>\r\n              </>\r\n              :\r\n              <Header logOut={() => setloggedIn(false)} loggedIn={loggedIn} />\r\n          }\r\n          <Container>\r\n            <Switch>\r\n              <Route exact path=\"/\" component={SignIn} />\r\n              <Route exact path=\"/Welcome\" component={Profile} />\r\n              <Route exact path=\"/AddContent\" component={AddContent} />\r\n              <Route exact path=\"/Learn\" component={ContentEntry} />\r\n              <Route exact path=\"/Signup\" component={SignUp} />\r\n              <Route exact path=\"/Signin\" component={SignIn} />\r\n              <Route exact path=\"/Discuss\" component={Discuss} />\r\n              <Route exact path=\"/Problem\" component={Problem} />\r\n              <Route exact path=\"/Contest\" component={Contest} />\r\n              <Route exact path=\"/AddContest\" component={AddContest} />\r\n              <Route exact path=\"/AllProblem\" component={AllProblem} />\r\n            </Switch>\r\n          </Container>\r\n        </Row>\r\n      </div>\r\n\r\n    </>\r\n\r\n\r\n  );\r\n}","D:\\BEProject\\frontend\\src\\Content.js",["260","261"],"import React, { useEffect } from 'react'\r\nimport { Row, Col, Card } from 'react-bootstrap';\r\nimport { Player, ControlBar, PlaybackRateMenuButton, VolumeMenuButton } from 'video-react'\r\nimport './Content.css';\r\nimport \"../node_modules/video-react/dist/video-react.css\";\r\n\r\nfunction Content({ topic, content, vlink }) {\r\n\r\n    return (\r\n\r\n        <div className=\"Content__Text\">\r\n            <Card>\r\n                <Card.Body>\r\n                    <Card.Title className=\"text-center\">Topic</Card.Title>\r\n                    <Col>\r\n                        <Card >\r\n                            <Card.Header>{topic}</Card.Header>\r\n                            <Card.Body>\r\n                                <Card.Text>\r\n                                    <p>{content}</p>\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <div className=\"Content__Video\">\r\n                        <Col>\r\n                            <Card>\r\n                                <Card.Header> Video </Card.Header>\r\n                                <div className=\"Content__VideoAlign\">\r\n                                    <Player playsInline fluid={false} width={700} height={300}>\r\n                                        <source src={vlink} />\r\n                                        <ControlBar>\r\n                                            <PlaybackRateMenuButton rates={[2, 1.5, 1]} order={7.1} />\r\n                                            <VolumeMenuButton disabled />\r\n                                        </ControlBar>\r\n                                    </Player>\r\n                                </div>\r\n                            </Card>\r\n                        </Col>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Content\r\n","D:\\BEProject\\frontend\\src\\Sidebar.js",["262"],"import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\n\r\nexport default function Sidebar(isLoggedIn) {\r\n    return (\r\n        <>\r\n            {\r\n                isLoggedIn ?\r\n\r\n                    < Nav justify variant=\"pills\" defaultActiveKey=\"/Welcome\" className=\"flex-column\" >\r\n                        < Nav.Item >\r\n                            < Nav.Link href=\"/Welcome\" > Profile</Nav.Link >\r\n                        </Nav.Item >\r\n                        <Nav.Item>\r\n                            <Nav.Link href=\"/Contest\" eventKey=\"link-1\">Contests</Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <Nav.Link href=\"/Learn\" eventKey=\"link-2\">Learn</Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <Nav.Link href =\"/AllProblem\" eventKey=\"link-3\">Practice</Nav.Link>\r\n                        </Nav.Item>\r\n\r\n                        {\r\n                            JSON.parse(localStorage.getItem(\"user\")).isadmin == \"True\" ? <>\r\n                                <Nav.Item>\r\n                                    <Nav.Link href=\"/AddContent\" eventKey=\"link-4\">Add Content</Nav.Link>\r\n                                </Nav.Item>\r\n                                <Nav.Item>\r\n                            <Nav.Link href=\"/AddContest\" eventKey=\"link-6\">AddContest</Nav.Link>\r\n                        </Nav.Item>\r\n                            </> : <></>\r\n\r\n                        }\r\n\r\n                        <Nav.Item>\r\n                            <Nav.Link href=\"/Discuss\" eventKey=\"link-5\">Discuss</Nav.Link>\r\n                        </Nav.Item>\r\n                        \r\n\r\n                    </Nav >\r\n\r\n                    : <></>\r\n            }\r\n        </>\r\n    )\r\n}\r\n","D:\\BEProject\\frontend\\src\\Header.js",[],"D:\\BEProject\\frontend\\src\\AddContent.js",["263","264","265","266"],"D:\\BEProject\\frontend\\src\\Contest.js",["267","268","269"],"import React, { useState, useEffect } from 'react'\r\nimport ContestService from './services/contest.service'\r\nimport { Button, Card, ListGroup } from 'react-bootstrap'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n//import Pbm from './Problem.js'\r\n\r\n\r\n\r\nfunction Contest() {\r\n\r\n    const [isLoading, setisLoading] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setisLoading(true)\r\n        ContestService.getcontest().then((response) => {\r\n            //console.log(response);\r\n            setisLoading(false)\r\n        }, (error) => {\r\n\r\n        })\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                isLoading ?\r\n                    <div className=\"Loader\">\r\n                        <CircularProgress />\r\n                    </div> : null\r\n            }\r\n\r\n            < Card >\r\n                <Card.Header>Upcoming Contests</Card.Header>\r\n                <ListGroup variant=\"flush\">\r\n                    {localStorage.getItem(\"Contests\") && JSON.parse(localStorage.getItem(\"Contests\")).map(cont => {\r\n\r\n                        let cur = new Date()\r\n                        let myTime = new Date(cont.timestamp)\r\n                        console.log(cur.getTime() + \" \" + myTime.getTime())\r\n\r\n                        if (cur.getTime() <= myTime.getTime())\r\n                            return <RegisterUserForContest contestId={cont.contestid} topic={cont.title} timestamp={cont.timestamp} />\r\n\r\n                    }\r\n                    )\r\n                    }\r\n                </ListGroup>\r\n            </Card>\r\n\r\n            <br />\r\n\r\n            < Card >\r\n                <Card.Header>Past Contests</Card.Header>\r\n                <ListGroup variant=\"flush\">\r\n                    {localStorage.getItem(\"Contests\") && JSON.parse(localStorage.getItem(\"Contests\")).map(cont => {\r\n\r\n                        let cur = new Date()\r\n                        let myTime = new Date(cont.timestamp)\r\n                        console.log(cur.getTime() + \" \" + myTime.getTime())\r\n\r\n                        if (cur.getTime() > myTime.getTime())\r\n                            return <RegisterUserForContest contestId={cont.contestid} topic={cont.title} timestamp={cont.timestamp} />\r\n                    }\r\n\r\n                    )\r\n                    }\r\n                </ListGroup>\r\n            </Card>\r\n\r\n\r\n        </div >\r\n    )\r\n\r\n}\r\n\r\nconst RegisterUserForContest = ({ contestId, topic, timestamp }) => {\r\n\r\n    const [show, setshow] = useState(true)\r\n    const [isRegistered, setisRegistered] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        var dt = new Date();\r\n        var gt = new Date(timestamp);\r\n\r\n        if (dt.getTime() > gt.getTime()) {\r\n            setshow(false);\r\n        }\r\n\r\n    }, [])\r\n\r\n    function handleClick(contestId) {\r\n\r\n        // abhi wala timestamp  < timestamp\r\n        var dt = new Date();\r\n        var gt = new Date(timestamp);\r\n\r\n        console.log(dt.getTime() + \" \" + gt.getTime())\r\n        ContestService.getcproblem(contestId).then((response) => {\r\n\r\n        }, (error) => {\r\n\r\n        })\r\n        console.log(contestId)\r\n    }\r\n\r\n    function register(contestid) {\r\n\r\n        var email = JSON.parse(localStorage.getItem(\"user\")).email;\r\n        ContestService.registeruser(email, contestid).then(() => {\r\n\r\n        }, (error) => {\r\n\r\n        })\r\n\r\n        setisRegistered(true);\r\n    }\r\n\r\n    return (\r\n        < ListGroup.Item action onClick={() => handleClick(contestId)}  > {show ? <Button disabled={isRegistered} onClick={() => register(contestId)}> Register </Button> : null}   {topic} </ListGroup.Item>\r\n    )\r\n}\r\n\r\n\r\nexport default Contest\r\n\r\n","D:\\BEProject\\frontend\\src\\Profile.js",["270"],"import React from 'react';\r\nimport { Card, Row, Col, Form, Button, Container } from 'react-bootstrap';\r\nimport './Profile.css';\r\nimport DoughnutGraph from './Dougnut'\r\nimport LineGraph from './Line'\r\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom.min';\r\n\r\nfunction Profile() {\r\n\r\n    return (\r\n        <div className=\"Profile\">\r\n            {\r\n                localStorage.getItem(\"user\") ?\r\n                    <Container>\r\n                        <div className=\"Profile__details\">\r\n                            <Row>\r\n\r\n                                <Col>\r\n                                    <Card className=\"text-center\">\r\n                                        <Card.Body>\r\n                                            <Card.Title>Submissions</Card.Title>\r\n\r\n                                            <Card.Text>\r\n                                                <DoughnutGraph />\r\n                                            </Card.Text>\r\n\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </Col>\r\n\r\n                                <Col>\r\n                                    <Card>\r\n                                        <Card.Header>Profile</Card.Header>\r\n                                        <Card.Body>\r\n\r\n                                            <Form>\r\n                                                <fieldset disabled>\r\n\r\n                                                    <Form.Row>\r\n                                                        <Form.Group as={Col} >\r\n                                                            <Form.Label>FirstName</Form.Label>\r\n                                                            <Form.Control type=\"text\" placeholder={JSON.parse(localStorage.getItem(\"user\")).firstname} />\r\n                                                        </Form.Group>\r\n\r\n                                                        <Form.Group as={Col} >\r\n                                                            <Form.Label>Lastname</Form.Label>\r\n                                                            <Form.Control type=\"text\" placeholder={JSON.parse(localStorage.getItem(\"user\")).lastname} />\r\n                                                        </Form.Group>\r\n                                                    </Form.Row>\r\n\r\n                                                    <Form.Group>\r\n                                                        <Form.Label>Username</Form.Label>\r\n                                                        <Form.Control placeholder={JSON.parse(localStorage.getItem(\"user\")).email} />\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group>\r\n                                                        <Form.Label>Rank</Form.Label>\r\n                                                        <Form.Control placeholder={JSON.parse(localStorage.getItem(\"user\")).rank} />\r\n                                                    </Form.Group>\r\n\r\n                                                </fieldset>\r\n                                            </Form>\r\n\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col style={{ height: '200px' }}>\r\n                                    <Card className=\"text-center\">\r\n                                        <Card.Body>\r\n                                            <Card.Title>Performance</Card.Title>\r\n\r\n                                            <Card.Text>\r\n                                                <LineGraph />\r\n                                            </Card.Text>\r\n\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    </Container> : <Redirect to=\"/Signin\" />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","D:\\BEProject\\frontend\\src\\Problem.js",["271","272","273","274","275","276"],"D:\\BEProject\\frontend\\src\\Discuss.js",["277","278","279"],"import React, { useState, useEffect } from 'react'\r\nimport { Card, ListGroup, Form, Row, Col, Button } from 'react-bootstrap'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport DiscussHeader from './DiscussHeader'\r\nimport DiscussResponse from './DiscussResponse'\r\nimport DiscussService from './services/discuss.service';\r\n\r\nfunction Discuss() {\r\n\r\n    const [discussionId, setdiscussionId] = useState(\"\")\r\n    const [Clicked, setClicked] = useState(false)\r\n    const [isLoading, setisLoading] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        setisLoading(true);\r\n\r\n        DiscussService.getDiscussionTopics().then((response) => {\r\n            setisLoading(false);\r\n        }, (error) => {\r\n            setisLoading(false);\r\n        })\r\n\r\n    }, [localStorage.getItem(\"Discuss\")]);\r\n\r\n\r\n    function handleClick(discussId) {\r\n\r\n        setdiscussionId(discussId);\r\n\r\n        console.log(\"In Discuss handle Click \" + discussId)\r\n\r\n        setisLoading(true);\r\n\r\n        // Ask axios to get the data from the backend\r\n\r\n\r\n\r\n        setisLoading(false);\r\n        setClicked(true);\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        var topic = event.target[0].value;\r\n        var content = event.target[1].value;\r\n        var email = JSON.parse(localStorage.getItem(\"user\")).email\r\n\r\n        DiscussService.addDiscussion(email, topic, content).then((response) => {\r\n\r\n        }, (error) => {\r\n\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <div>{\r\n\r\n            isLoading ?\r\n                <div className=\"Loader\">\r\n                    <CircularProgress />\r\n                </div> : null\r\n        }\r\n            {\r\n\r\n                Clicked ? <>\r\n                    <Discussion discussId={discussionId} />\r\n                </>\r\n                    :\r\n                    <>\r\n                        <Card>\r\n                            <Card.Header>Ask a Question</Card.Header>\r\n                            <Card.Body>\r\n                                <Form onSubmit={handleSubmit}>\r\n                                    <Form.Group as={Row} controlId=\"formHorizontalVideo\">\r\n                                        <Form.Label column sm={2}>\r\n                                            Topic\r\n                                        </Form.Label>\r\n\r\n                                        <Col sm={5}>\r\n                                            <Form.Control type=\"link\" placeholder=\"Topic of Question\" />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"Form.ControlContent\">\r\n                                        <Form.Label >Doubt/Question</Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows={2} />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Row}>\r\n                                        <Col sm={{ span: 10 }}>\r\n                                            <Button type=\"submit\">Submit</Button>\r\n                                        </Col>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Card.Body>\r\n                        </Card>\r\n\r\n                        <br />\r\n\r\n                        <Card>\r\n                            <Card.Header>Discuss</Card.Header>\r\n                            <ListGroup variant=\"flush\">\r\n                                {localStorage.getItem(\"Discuss\") && JSON.parse(localStorage.getItem(\"Discuss\")).map(dis => <ListGroup.Item action onClick={() => handleClick(dis.discussionId)} disabled={isLoading} >{dis.title}</ListGroup.Item>)}\r\n                            </ListGroup>\r\n                        </Card>\r\n                    </>\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\nfunction Discussion({ discussId }) {\r\n\r\n    const [discussion, setdiscussion] = useState(null);\r\n    const [discussionResponses, setdiscussionResponses] = useState([])\r\n    // const [user, setuser] = useState()\r\n\r\n    useEffect(() => {\r\n\r\n        if (localStorage.getItem(discussId) == undefined) {\r\n\r\n            DiscussService.getDiscussion(discussId).then((response) => {\r\n                setdiscussion(response[0])\r\n\r\n            }, (error) => {\r\n\r\n            })\r\n        } else {\r\n            setdiscussion(JSON.parse(localStorage.getItem(discussId))[0])\r\n        }\r\n\r\n        //console.log(discussion)\r\n\r\n        DiscussService.getDiscussionResponses(discussId).then((response) => {\r\n            //  console.log(response);\r\n            setdiscussionResponses([...response])\r\n        }, (error) => {\r\n\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n    }, [discussion])\r\n\r\n    if (discussion != null) {\r\n        return <>\r\n            <DiscussHeader Topic={discussion.title} discussId={discussion.discussionId} email={discussion.email} Content={discussion.content} />\r\n            { discussionResponses.map(dis => <DiscussResponse email={dis.email} Title={dis.title} Content={dis.content} />)}\r\n        </>\r\n    }\r\n\r\n\r\n\r\n    return <div className=\"Loader\">\r\n        < CircularProgress />\r\n    </div >\r\n}\r\n\r\nexport default Discuss\r\n","D:\\BEProject\\frontend\\src\\components\\Signup.js",["280","281","282"],"import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AuthService from '../services/auth.service';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Alertdism from '../Alertdism'\r\nimport './Signup.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function SignUp() {\r\n    let history = useHistory();\r\n    let loading = false;\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        loading = true;\r\n\r\n        let firstname = event.target[0].value;\r\n        let lastname = event.target[2].value;\r\n        let email = event.target[4].value;\r\n        let password = event.target[6].value;\r\n\r\n\r\n        AuthService.register(firstname, lastname, email, password).then((response) => {\r\n            setsuccess(1)\r\n            //history.push(\"/Signin\");\r\n        }, (error) => {\r\n            setsuccess(0)\r\n            //history.push(\"/Signup\");\r\n            console.log(error);\r\n        });\r\n\r\n    }\r\n\r\n    const [success, setsuccess] = useState(2)\r\n\r\n    return (\r\n        <>{loading ?\r\n            <div className=\"Loader\">\r\n                <CircularProgress />\r\n            </div>\r\n\r\n            : <></>}\r\n            {success == 1 ? <Alertdism setsucess={setsuccess} theme={\"success\"} content={\"User Successfully Registered\"} heading={\"Success\"} /> :\r\n\r\n                success == 0 ? <Alertdism setsucess={setsuccess} theme={\"danger\"} content={\"User Already Exists\"} heading={\"Failure\"} /> : null\r\n            }\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign up\r\n                </Typography>\r\n\r\n                    <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    autoComplete=\"fname\"\r\n                                    name=\"firstName\"\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"firstName\"\r\n                                    label=\"First Name\"\r\n                                    autoFocus\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"lastName\"\r\n                                    label=\"Last Name\"\r\n                                    name=\"lastName\"\r\n                                    autoComplete=\"lname\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"email\"\r\n                                    label=\"Email Address\"\r\n                                    name=\"email\"\r\n                                    autoComplete=\"email\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    autoComplete=\"current-password\"\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        {\r\n                            loading ? <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.submit}\r\n                                disabled\r\n                            >\r\n                                Sign Up\r\n                        </Button> :\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className={classes.submit}\r\n                                >\r\n                                    Sign Up\r\n                                </Button>\r\n                        }\r\n\r\n                        <Grid container justify=\"flex-end\">\r\n                            <Grid item>\r\n                                <Link href={\"/Signin\"} variant=\"body2\">\r\n                                    Already have an account? Sign in\r\n                            </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </div>\r\n                <Box mt={5}>\r\n                </Box>\r\n            </Container>\r\n        </>\r\n    );\r\n}","D:\\BEProject\\frontend\\src\\components\\Signin.js",["283","284"],"import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport AuthService from '../services/auth.service';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Alertdism from '../Alertdism'\r\nimport './Signup.css';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function SignIn() {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    // TO - DO Implement Login Feature ..\r\n    const [loading, setloading] = useState(false)\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        setloading(true);\r\n\r\n        let email = event.target[0].value;\r\n        let password = event.target[2].value;\r\n\r\n        AuthService.login(email, password).then((response) => {\r\n            console.log(response);\r\n            setloading(false);\r\n            setsuccess(1);\r\n            history.push(\"/Welcome\");\r\n            window.location.reload();\r\n        }, (error) => {\r\n            setsuccess(0);\r\n        });\r\n\r\n        setloading(false);\r\n\r\n    }\r\n\r\n    const [success, setsuccess] = useState(2)\r\n\r\n\r\n    return (\r\n        <>{loading ?\r\n            <div className=\"Loader\">\r\n                <CircularProgress />\r\n            </div>\r\n\r\n            : <></>}\r\n\r\n            {success == 1 ? <Alertdism setsucess={setsuccess} theme={\"success\"} content={\"User Successfully Registered\"} heading={\"Success\"} /> :\r\n\r\n                success == 0 ? <Alertdism setsucess={setsuccess} theme={\"danger\"} content={\"Check Username and Password\"} heading={\"Failure\"} /> : null\r\n            }\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign in\r\n                     </Typography>\r\n                    <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Email Address\"\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            autoFocus\r\n                        />\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                        />\r\n                        {loading ? <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            disabled\r\n                        >\r\n                            Sign In\r\n                        </Button> :\r\n                            <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.submit}\r\n                            >\r\n                                Sign In\r\n                        </Button>\r\n                        }\r\n                        <Grid container>\r\n                            <Grid item>\r\n                                <Link href=\"/Signup\" variant=\"body2\">\r\n                                    {\"Don't have an account? Sign Up\"}\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </div>\r\n            </Container>\r\n        </>\r\n\r\n    );\r\n}","D:\\BEProject\\frontend\\src\\Dougnut.js",[],"D:\\BEProject\\frontend\\src\\Line.js",[],"D:\\BEProject\\frontend\\src\\ProblemBody.js",["285"],"import React, { useState } from 'react'\r\nimport { Form, Card, Row, Col, Button } from 'react-bootstrap';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport InputOutput from './InputOutput';\r\n\r\nfunction ProblemBody({ Topic, Content, Input, Output }) {\r\n\r\n    const [click, setclick] = useState(false)\r\n\r\n    return (\r\n        <div>\r\n            <Card >\r\n                <Card.Body>\r\n                    <Card.Title className=\"text-center\">{Topic}</Card.Title>\r\n                    <Card>\r\n                        <Card.Header>Problem Statement</Card.Header>\r\n                        <Card.Body>\r\n\r\n                            <Card.Text>\r\n                                {Content}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <br />\r\n                    <Card>\r\n                        <Card.Header>Input</Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                {Input}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <br />\r\n                    <Card>\r\n                        <Card.Header>Output</Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                {Output}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <br />\r\n\r\n                    <Card>\r\n                        <Card.Header>Example</Card.Header>\r\n                        <Card.Body>\r\n\r\n                            <InputOutput Input={\"Hello World\"} Output={\"Hello how are you ?\"} />\r\n\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <br />\r\n\r\n                    <Form>\r\n                        <Form.File id=\"formcheck-api-regular\">\r\n                            <Form.File.Label>Upload a file</Form.File.Label>\r\n                            <Form.File.Input />\r\n                        </Form.File>\r\n                        <br />\r\n                        <Form.Group as={Row}>\r\n\r\n                            <Col sm={{ span: 2 }}>\r\n                                {click ? <Button type=\"submit\" disabled>Submit</Button> : <Button type=\"submit\">Submit</Button>}\r\n                            </Col>\r\n                        </Form.Group>\r\n                        {click ?\r\n                            <div className=\"Loader\">\r\n                                <CircularProgress />\r\n                            </div>\r\n\r\n                            : <></>}\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProblemBody\r\n",["286","287"],"D:\\BEProject\\frontend\\src\\DiscussResponse.js",[],"D:\\BEProject\\frontend\\src\\DiscussHeader.js",[],"D:\\BEProject\\frontend\\src\\services\\auth.service.js",[],"D:\\BEProject\\frontend\\src\\InputOutput.js",[],"D:\\BEProject\\frontend\\src\\DiscussAnswer.js",[],"D:\\BEProject\\frontend\\src\\services\\discuss.service.js",[],"D:\\BEProject\\frontend\\src\\services\\content.service.js",[],"D:\\BEProject\\frontend\\src\\Alertdism.js",[],"D:\\BEProject\\frontend\\src\\ContentEntry.js",[],"D:\\BEProject\\frontend\\src\\AddContest.js",["288","289","290","291","292","293","294","295","296"],"import React, { useState, useEffect } from 'react'\r\nimport './AddContent.css'\r\nimport { Form, Row, Col, Button, Card, Alert, ListGroup } from 'react-bootstrap'\r\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport ContestService from './services/contest.service'\r\nimport Alertdism from './Alertdism';\r\n\r\nfunction AddContest() {\r\n\r\n    let msgform = null;\r\n\r\n    const [contestID, setcontestID] = useState(\"\")\r\n    const [success, setsuccess] = useState(2);\r\n    const [hide, sethide] = useState(false)\r\n\r\n    function handleClick(event) {\r\n        event.preventDefault();\r\n\r\n        //Duration\r\n        console.log(event.target[0].value)\r\n        var contest_duration = event.target[0].value\r\n        //Title\r\n        console.log(event.target[1].value);\r\n        var contest_title = event.target[1].value\r\n        //TimeStamp\r\n        console.log(event.target[2].value);\r\n        var contest_timestamp = new Date(event.target[2].value)\r\n\r\n        ContestService.addcontest(parseInt(contest_duration), contest_title, contest_timestamp).then((response) => {\r\n            setcontestID(response.id)\r\n            sethide(true);\r\n            setsuccess(1);\r\n        }, (error) => {\r\n            setsuccess(0);\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"AddContest\">\r\n            {\r\n                localStorage.getItem(\"user\") != undefined ?\r\n                    <>\r\n\r\n                        { success == 1 ? <Alertdism setsucess={setsuccess} theme={\"success\"} content={\"Problem Sucessfully Added\"} heading={\"Success\"} /> :\r\n\r\n                            success == 0 ? <Alertdism setsucess={setsuccess} theme={\"danger\"} content={\"Some error occured please try again\"} heading={\"Failure\"} /> : null\r\n                        }\r\n                        <Card className=\"text-center\">\r\n                            <Card.Body>\r\n                                <Card.Title>Contest</Card.Title>\r\n\r\n                                <Card.Text>\r\n                                </Card.Text>\r\n                                <Form id=\"myForm\" className=\"form\" ref={form => msgform = form} onSubmit={handleClick}>\r\n\r\n                                    <Form.Group as={Row} controlId=\"Form.SelectCustom\">\r\n                                        <Form.Label column sm={2} >Duration</Form.Label>\r\n                                        <Col sm={10}>\r\n                                            <Form.Control disabled={hide} as=\"select\" custom >\r\n                                                <option>1</option>\r\n                                                <option>2</option>\r\n                                                <option>24</option>\r\n                                            </Form.Control>\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Row} controlId=\"formHorizontalTitle\">\r\n                                        <Form.Label column sm={2}>\r\n                                            Title\r\n                                </Form.Label>\r\n                                        <Col sm={10}>\r\n                                            <Form.Control disabled={hide} type=\"text\" placeholder=\"\" />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Row} controlId=\"formHorizontalTimestamp\">\r\n                                        <Form.Label column sm={2}>\r\n                                            TimeStamp\r\n                                </Form.Label>\r\n\r\n                                        <Col sm={10}>\r\n                                            <Form.Control disabled={hide} type=\"date\" placeholder=\"DD/MM/YY\" />\r\n                                        </Col>\r\n\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Row}>\r\n                                        <Col sm={{ span: 10 }}>\r\n                                            <Button disabled={hide} type=\"submit\">Submit</Button>\r\n                                        </Col>\r\n                                    </Form.Group>\r\n                                </Form>\r\n\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <br />\r\n                        {hide ? <AddProblem hide={!hide} contestID={contestID} /> : null}\r\n                    </> : <Redirect to=\"/Signin\" />\r\n            }\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\nconst AddProblem = ({ hide, contestID }) => {\r\n\r\n\r\n    let msgform = null\r\n\r\n    const [success, setsuccess] = useState(2);\r\n    const [problems, setproblems] = useState([])\r\n    const [counter, setcounter] = useState(0)\r\n\r\n    function handleClick(event) {\r\n\r\n        event.preventDefault();\r\n\r\n        console.log(\"ContestID : \" + contestID);\r\n        //problem name\r\n        console.log(event.target[1].value)\r\n        var p_name = event.target[1].value\r\n        //problem state\r\n        console.log(event.target[2].value)\r\n        var p_statement = event.target[2].value\r\n        //problem tags\r\n        console.log(event.target[3].value)\r\n        var p_tags = event.target[3].value\r\n        //problem eg \r\n        console.log(event.target[4].value)\r\n        var p_example = event.target[4].value\r\n        //problem const\r\n        console.log(event.target[5].value)\r\n        var p_constr = event.target[5].value\r\n        //problem test case\r\n        console.log(event.target[6].value)\r\n        var p_txtcase = event.target[6].value\r\n\r\n\r\n        ContestService.addproblem(p_name, p_statement, p_tags, p_example, p_constr, p_txtcase).then((response) => {\r\n            console.log(response)\r\n            setproblems(oldArray => [...oldArray, response])\r\n            setsuccess(1)\r\n        }, (error) => {\r\n            setsuccess(0)\r\n        })\r\n\r\n        msgform.reset();\r\n    }\r\n\r\n\r\n    function finish() {\r\n        console.log(contestID)\r\n\r\n        for (var i = 0; i < problems.length; i++) {\r\n\r\n            ContestService.addprobleminContest(contestID, problems[i].id).then((response) => {\r\n                console.log(response)\r\n                setcounter(prevCounter => prevCounter + 1)\r\n\r\n            }, (error) => {\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    if (counter > 0 && counter == problems.length) {\r\n        return <Alertdism setsucess={setsuccess} theme={\"success\"} content={\"Contest Created Successfully\"} heading={\"Success\"} />\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n\r\n            { success == 1 ? <Alertdism setsucess={setsuccess} theme={\"success\"} content={\"Problem Sucessfully Added\"} heading={\"Success\"} /> :\r\n\r\n                success == 0 ? <Alertdism setsucess={setsuccess} theme={\"danger\"} content={\"Some error occured please try again\"} heading={\"Failure\"} /> : null\r\n            }\r\n            <Card className=\"text-center\">\r\n                <Card.Body>\r\n                    <Card.Title>Add Problem</Card.Title>\r\n\r\n                    <Card.Text>\r\n                    </Card.Text>\r\n\r\n                    <Form id=\"myForm\" className=\"form\" ref={form => msgform = form} onSubmit={handleClick}>\r\n\r\n\r\n                        <Form.Group as={Row} controlId=\"formHorizontalTitle\">\r\n                            {\r\n\r\n                                <Col >\r\n                                    <Button onClick={finish} >Finish </Button>\r\n                                </Col>\r\n\r\n                            }\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row} controlId=\"formHorizontalTitle\">\r\n                            <Form.Label column sm={2}>\r\n                                Problem  Name\r\n                                </Form.Label>\r\n                            <Col sm={10}>\r\n                                <Form.Control type=\"text\" placeholder=\"\" />\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n\r\n                        <Form.Group as={Row} controlId=\"formHorizontalTitle\">\r\n                            <Form.Label column sm={2}>\r\n                                Problem  Statement\r\n                                </Form.Label>\r\n                            <Col sm={10}>\r\n                                <Form.Control as=\"textarea\" rows={4} />\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row} controlId=\"formHorizontalTitle\">\r\n                            <Form.Label column sm={2}>\r\n                                Problem Tags\r\n                                </Form.Label>\r\n                            <Col sm={10}>\r\n                                <Form.Control type=\"text\" placeholder=\"\" />\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n\r\n\r\n                        <Form.Group as={Row} controlId=\"formHorizontalTitle\">\r\n                            <Form.Label column sm={2}>\r\n                                Example\r\n                                </Form.Label>\r\n                            <Col sm={10}>\r\n                                <Form.Control as=\"textarea\" rows={4} placeholder=\"\" />\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n\r\n                        <Form.Group as={Row} controlId=\"formHorizontalTitle\">\r\n                            <Form.Label column sm={2}>\r\n                                Constraints\r\n                                </Form.Label>\r\n                            <Col sm={10}>\r\n                                <Form.Control as=\"textarea\" placeholder=\"\" />\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n\r\n                        <Form.Group as={Row} controlId=\"formHorizontalTitle\">\r\n                            <Form.Label column sm={2}>\r\n                                Test Case\r\n                                </Form.Label>\r\n                            <Col sm={10}>\r\n                                <Form.Control as=\"textarea\" rows={4} placeholder=\"\" />\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row}>\r\n                            <Col sm={{ span: 10 }}>\r\n                                <Button type=\"submit\">AddProblem</Button>\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                    </Form>\r\n\r\n\r\n                </Card.Body>\r\n            </Card>\r\n\r\n\r\n            <br />\r\n            < Card >\r\n                <Card.Header>Added Problems</Card.Header>\r\n\r\n                {\r\n                    problems.map(problem =>\r\n                        <ListGroup variant=\"flush\">\r\n                            < ListGroup.Item action onClick={() => handleClick()}  >  {problem.problem_name} </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    )\r\n                }\r\n            </Card>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddContest\r\n","D:\\BEProject\\frontend\\src\\AllProblem.js",["297"],"import React, { useState, useEffect } from 'react'\r\nimport ContestService from './services/contest.service'\r\nimport { Card, ListGroup } from 'react-bootstrap'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Pbm from './Problem.js'\r\nfunction AllProblem() {\r\n\r\n    const [isLoading, setisLoading] = useState(false)\r\n    const [problem, setproblem] = useState(null)\r\n\r\n    useEffect(() => {\r\n        setisLoading(true)\r\n        ContestService.getproblems().then((response) => {\r\n            //console.log(response);\r\n            setisLoading(false)\r\n        }, (error) => {\r\n\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log(problem)\r\n    }, [problem])\r\n\r\n\r\n    function handleClick(cont) {\r\n\r\n\r\n        setproblem(cont);\r\n\r\n        console.log(problem)\r\n\r\n    }\r\n\r\n    if (problem != null) {\r\n        return <Pbm name={problem.cont.problem_name} tags={problem.cont.problem_tags}  statement={problem.cont.problem_statement} exampl={problem.cont. problem_io} constraints={problem.cont.problem_con} txtcase={problem.cont.problem_test}/>\r\n    } else {\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    isLoading ?\r\n                        <div className=\"Loader\">\r\n                            <CircularProgress />\r\n                        </div> : null\r\n                }\r\n\r\n\r\n                < Card >\r\n                    <Card.Header>Problem Set</Card.Header>\r\n                    <ListGroup variant=\"flush\">\r\n                        {localStorage.getItem(\"Problems\") && JSON.parse(localStorage.getItem(\"Problems\")).map(cont => <ListGroup.Item action onClick={() => handleClick({ cont })} disabled={isLoading} >{cont.problem_name}</ListGroup.Item>)}\r\n                    </ListGroup>\r\n                </Card>\r\n\r\n\r\n            </div >\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default AllProblem\r\n","D:\\BEProject\\frontend\\src\\services\\contest.service.js",[],"D:\\BEProject\\frontend\\src\\components\\Compiler\\Compiler.js",["298","299","300","301","302"],"D:\\BEProject\\frontend\\src\\services\\compiler.service.js",[],"F:\\BE-Pro\\BEProject\\frontend\\src\\index.js",[],["303","304"],"F:\\BE-Pro\\BEProject\\frontend\\src\\App.js",["305","306","307"],"import SignUp from './components/Signup';\r\nimport React, { useState, useEffect } from 'react';\r\nimport SignIn from './components/Signin';\r\nimport { Route, Switch, useHistory } from \"react-router-dom\";\r\nimport Header from './Header';\r\nimport Sidebar from './Sidebar';\r\nimport Profile from './Profile';\r\nimport AddContent from './AddContent';\r\nimport Contest from './Contest';\r\nimport AddContest from './AddContest';\r\nimport AllProblem from './AllProblem'\r\nimport Homepage from './Homepage';\r\nimport './App.css';\r\nimport { Container, Col, Row } from 'react-bootstrap';\r\nimport Content from './Content';\r\nimport Discuss from './Discuss';\r\nimport Problem from './Problem';\r\nimport ContentEntry from './ContentEntry';\r\n\r\nexport default function App() {\r\n\r\n  let history = useHistory();\r\n  const [user, setuser] = useState({});\r\n  const [loggedIn, setloggedIn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"user\")) {\r\n      setloggedIn(true);\r\n      setuser(localStorage.getItem(\"user\"));\r\n    } else {\r\n      setloggedIn(false);\r\n    }\r\n  }, [loggedIn])\r\n\r\n  return (\r\n    <>\r\n      <div className=\"MainConatiner\">\r\n        <Row>\r\n          {\r\n            (loggedIn) ?\r\n              <>\r\n                <Header logOut={() => setloggedIn(false)} loggedIn={loggedIn} />\r\n                <Col xs={2}>\r\n                  <div className=\"Sidebar\">\r\n                    <Sidebar isLoggedIn={loggedIn} />\r\n                  </div>\r\n                </Col>\r\n              </>\r\n              :\r\n              <Header logOut={() => setloggedIn(false)} loggedIn={loggedIn} />\r\n          }\r\n          <Container>\r\n            <Switch>\r\n              <Route exact path=\"/\" component={SignIn} />\r\n              <Route exact path=\"/Welcome\" component={Profile} />\r\n              <Route exact path=\"/AddContent\" component={AddContent} />\r\n              <Route exact path=\"/Learn\" component={ContentEntry} />\r\n              <Route exact path=\"/Signup\" component={SignUp} />\r\n              <Route exact path=\"/Signin\" component={SignIn} />\r\n              <Route exact path=\"/Discuss\" component={Discuss} />\r\n              <Route exact path=\"/Problem\" component={Problem} />\r\n              <Route exact path=\"/Contest\" component={Contest} />\r\n              <Route exact path=\"/AddContest\" component={AddContest} />\r\n              <Route exact path=\"/AllProblem\" component={AllProblem} />\r\n              <Route exact path=\"/Homepage\" component={Homepage} />\r\n            </Switch>\r\n          </Container>\r\n        </Row>\r\n      </div>\r\n\r\n    </>\r\n\r\n\r\n  );\r\n}","F:\\BE-Pro\\BEProject\\frontend\\src\\Contest.js",["308","309","310","311","312","313","314"],"import React, { useState, useEffect } from 'react'\r\nimport ContestService from './services/contest.service'\r\nimport { Button, Card, CardColumns, ListGroup } from 'react-bootstrap'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Cct from './CContest.js'\r\nimport { duration } from '@material-ui/core';\r\n\r\n\r\n\r\nfunction Contest() {\r\n\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [ccid, setccid] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setisLoading(true)\r\n        ContestService.getcontest().then((response) => {\r\n            //console.log(response);\r\n            setisLoading(false)\r\n        }, (error) => {\r\n\r\n        })\r\n    }, [])\r\n\r\n\r\n    if(ccid!=undefined && ccid != \"\")\r\n    {\r\n        return<Cct ccid = {ccid} />\r\n    }\r\n    else{\r\n        return (\r\n            <div>\r\n                {\r\n                    isLoading ?\r\n                        <div className=\"Loader\">\r\n                            <CircularProgress />\r\n                        </div> : null\r\n                }\r\n    \r\n                < Card >\r\n                    <Card.Header>Upcoming Contests</Card.Header>\r\n                    <ListGroup variant=\"flush\">\r\n                        {localStorage.getItem(\"Contests\") && JSON.parse(localStorage.getItem(\"Contests\")).map(cont => {\r\n    \r\n                            let cur = new Date()\r\n                            let myTime = new Date(cont.timestamp)\r\n                            \r\n    \r\n                            if (cur.getTime() <= myTime.getTime())\r\n                                return <RegisterUserForContest contestId={cont.contestid} topic={cont.title} timestamp={cont.timestamp} />\r\n    \r\n                        }\r\n                        )\r\n                        }\r\n                    </ListGroup>\r\n                </Card>\r\n    \r\n                <br />\r\n    \r\n                < Card >\r\n                    <Card.Header>Past Contests</Card.Header>\r\n                    <ListGroup variant=\"flush\">\r\n                        {localStorage.getItem(\"Contests\") && JSON.parse(localStorage.getItem(\"Contests\")).map(cont => {\r\n    \r\n                            let cur = new Date()\r\n                            let myTime = new Date(cont.timestamp)\r\n                            \r\n    \r\n                            if (cur.getTime() > myTime.getTime())\r\n                                return <RegisterUserForContest  setccid= {setccid} contestId={cont.contestid} topic={cont.title} timestamp={cont.timestamp} />\r\n                        }\r\n    \r\n                        )\r\n                        }\r\n                    </ListGroup>\r\n                </Card>\r\n    \r\n    \r\n            </div >\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst RegisterUserForContest = ({ contestId, topic, timestamp, setccid} ) => {\r\n\r\n    const [show, setshow] = useState(true)\r\n    const [isRegistered, setisRegistered] = useState(false);\r\n   \r\n    useEffect(() => {\r\n\r\n        var dt = new Date();\r\n        var gt = new Date(timestamp);\r\n\r\n        if (dt.getTime() > gt.getTime()) {\r\n            setshow(false);\r\n        }\r\n\r\n    }, [])\r\n\r\n    function handleClick(contestId) {\r\n\r\n        // abhi wala timestamp  < timestamp\r\n        var dt = new Date();\r\n        var gt = new Date(timestamp);\r\n\r\n        console.log(dt.getTime() + \" \" + gt.getTime())\r\n        \r\n        setccid(contestId);\r\n        console.log(contestId)\r\n    }\r\n\r\n    function register(contestid) {\r\n\r\n        var email = JSON.parse(localStorage.getItem(\"user\")).email;\r\n        ContestService.registeruser(email, contestid).then(() => {\r\n\r\n        }, (error) => {\r\n\r\n        })\r\n\r\n        setisRegistered(true);\r\n    }\r\n\r\n    return (\r\n        < ListGroup.Item action onClick={() => handleClick(contestId)}  > {show ? <Button disabled={isRegistered} onClick={() => register(contestId)}> Register </Button> : null}   {topic} </ListGroup.Item>\r\n    )\r\n}\r\n\r\n\r\nexport default Contest\r\n\r\n","F:\\BE-Pro\\BEProject\\frontend\\src\\Profile.js",["315"],"F:\\BE-Pro\\BEProject\\frontend\\src\\AddContent.js",["316","317","318","319"],"import React, { useState } from 'react'\r\nimport './AddContent.css'\r\nimport { Form, Row, Col, Button, Card, Alert } from 'react-bootstrap'\r\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport ContentService from './services/content.service'\r\nimport Alertdism from './Alertdism'\r\n\r\nfunction AddContent() {\r\n\r\n    let msgform = null;\r\n    const [success, setsuccess] = useState(2);\r\n\r\n    function handleClick(event) {\r\n        event.preventDefault();\r\n        //Section\r\n        console.log(event.target[0].value)\r\n        var topic_module = event.target[0].value\r\n        //Topic\r\n        console.log(event.target[1].value);\r\n        var topic_name = event.target[1].value\r\n        //vlink\r\n        console.log(event.target[2].value);\r\n        var topic_vlink = event.target[2].value\r\n        //content\r\n        console.log(event.target[3].value);\r\n        var topic_content = event.target[3].value;\r\n\r\n        ContentService.addcontent(topic_module, topic_name, topic_vlink, topic_content).then((response) => {\r\n            setsuccess(1)\r\n        }, (error) => {\r\n            setsuccess(0)\r\n        })\r\n\r\n        msgform.reset();\r\n    }\r\n\r\n    return (\r\n        <div className=\"AddContent\">\r\n            {\r\n                localStorage.getItem(\"user\") != undefined ?\r\n                    <>\r\n                        {success == 1 ? <Alertdism setsucess={setsuccess} theme={\"success\"} content={\"Topic Successfully Added\"} heading={\"Success\"} /> :\r\n\r\n                            success == 0 ? <Alertdism setsucess={setsuccess} theme={\"danger\"} content={\"Some error occured please try again\"} heading={\"Failure\"} /> : null\r\n                        }\r\n                        <Card className=\"text-center\">\r\n                            <Card.Body>\r\n                                <Card.Title>Content</Card.Title>\r\n\r\n                                <Card.Text>\r\n                                </Card.Text>\r\n                                <Form id=\"myForm\" className=\"form\" ref={form => msgform = form} onSubmit={handleClick}>\r\n\r\n                                    <Form.Group as={Row} controlId=\"Form.SelectCustom\">\r\n                                        <Form.Label column sm={2} >Section</Form.Label>\r\n                                        <Col sm={10}>\r\n                                            <Form.Control as=\"select\" custom>\r\n                                                <option>DataStructures</option>\r\n                                                <option>Algorithms</option>\r\n                                            </Form.Control>\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Row} controlId=\"formHorizontalTopic\">\r\n                                        <Form.Label column sm={2}>\r\n                                            Topic\r\n                                </Form.Label>\r\n                                        <Col sm={10}>\r\n                                            <Form.Control type=\"text\" placeholder=\"Binary Search\" />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Row} controlId=\"formHorizontalVideo\">\r\n                                        <Form.Label column sm={2}>\r\n                                            VideoLink\r\n                                </Form.Label>\r\n\r\n                                        <Col sm={10}>\r\n                                            <Form.Control type=\"link\" placeholder=\"Video Link\" />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n\r\n                                    <Form.Group controlId=\"Form.ControlContent\">\r\n                                        <Form.Label >Content</Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows={10} />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Row}>\r\n                                        <Col sm={{ span: 10 }}>\r\n                                            <Button type=\"submit\">Submit</Button>\r\n                                        </Col>\r\n                                    </Form.Group>\r\n                                </Form>\r\n\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </> : <Redirect to=\"/Signin\" />\r\n            }\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default AddContent\r\n","F:\\BE-Pro\\BEProject\\frontend\\src\\AddContest.js",["320","321","322","323","324","325","326","327","328"],"F:\\BE-Pro\\BEProject\\frontend\\src\\AllProblem.js",["329"],"F:\\BE-Pro\\BEProject\\frontend\\src\\Discuss.js",["330","331","332"],"F:\\BE-Pro\\BEProject\\frontend\\src\\Content.js",["333","334"],"F:\\BE-Pro\\BEProject\\frontend\\src\\ContentEntry.js",[],"F:\\BE-Pro\\BEProject\\frontend\\src\\Header.js",[],"F:\\BE-Pro\\BEProject\\frontend\\src\\Sidebar.js",["335"],"F:\\BE-Pro\\BEProject\\frontend\\src\\components\\Signup.js",["336","337","338"],"F:\\BE-Pro\\BEProject\\frontend\\src\\components\\Signin.js",["339","340"],"F:\\BE-Pro\\BEProject\\frontend\\src\\Problem.js",["341","342","343","344","345","346"],"import React, { useState } from 'react'\r\nimport { Form, Card, Row, Col, Button } from 'react-bootstrap';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Compiler from './components/Compiler/Compiler';\r\n\r\nfunction Problem({ name, tags, statement, exampl, constraints, txtcase }) {\r\n\r\n    return (\r\n\r\n        <div>\r\n            <Card >\r\n                <Card.Body>\r\n                    <Card.Title className=\"text-center\">  <h2>{name}</h2>        <small>Tags {tags}</small>  <br></br>\r\n                        <small>{constraints}</small>\r\n                    </Card.Title>\r\n                    <Card>\r\n                        <Card.Header>Problem Statement</Card.Header>\r\n                        <Card.Body>\r\n\r\n                            <Card.Text>\r\n                                {statement}\r\n\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <br />\r\n                    <Card>\r\n                        <Card.Header>Example</Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                {exampl}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <br />\r\n                    <Card>\r\n                        <Card.Header>Test Case</Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                {txtcase}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <br />\r\n\r\n                </Card.Body>\r\n            </Card>\r\n\r\n            <Compiler />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Problem\r\n","F:\\BE-Pro\\BEProject\\frontend\\src\\Dougnut.js",[],"F:\\BE-Pro\\BEProject\\frontend\\src\\Line.js",[],"F:\\BE-Pro\\BEProject\\frontend\\src\\DiscussResponse.js",[],"F:\\BE-Pro\\BEProject\\frontend\\src\\DiscussHeader.js",[],"F:\\BE-Pro\\BEProject\\frontend\\src\\Alertdism.js",[],"F:\\BE-Pro\\BEProject\\frontend\\src\\services\\auth.service.js",[],"F:\\BE-Pro\\BEProject\\frontend\\src\\services\\discuss.service.js",[],"F:\\BE-Pro\\BEProject\\frontend\\src\\services\\content.service.js",[],"F:\\BE-Pro\\BEProject\\frontend\\src\\services\\contest.service.js",[],"F:\\BE-Pro\\BEProject\\frontend\\src\\components\\Compiler\\Compiler.js",["347","348","349","350","351"],"import React, { useState, useEffect } from 'react'\r\nimport { Card, Form, Button, Row, Col } from 'react-bootstrap'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Alertdism from '../../Alertdism';\r\nimport CompilerService from '../../services/compiler.service'\r\n\r\nfunction Compiler() {\r\n\r\n    const [hide, sethide] = useState(false)\r\n    const [isLoading, setisLoading] = useState(false)\r\n    const [success, setsuccess] = useState(3)\r\n    const [message, setmessage] = useState(\"\")\r\n\r\n    let output = document.getElementById(\"Form.ControlOutput\");\r\n\r\n    function handleClick(event) {\r\n\r\n        sethide(true);\r\n\r\n        event.preventDefault();\r\n        var lang_id = event.target[0].value\r\n        var source = event.target[1].value\r\n        var input = event.target[2].value;\r\n\r\n        output.innerHTML = \"\";\r\n\r\n        setisLoading(true);\r\n\r\n        CompilerService.run_code(lang_id, source, input).then((response) => {\r\n\r\n            localStorage.setItem(\"token\", response.token);\r\n\r\n            output.innerHTML += \"Code is Submitted Sucessfully ! \\n\";\r\n\r\n            setisLoading(false);\r\n\r\n            sethide(false);\r\n\r\n\r\n        }, (error) => {\r\n\r\n        })\r\n\r\n\r\n    }\r\n\r\n    function b64DecodeUnicode(str) {\r\n        // Going backwards: from bytestream, to percent-encoding, to original string.\r\n        return decodeURIComponent(atob(str).split('').map(function (c) {\r\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n        }).join(''));\r\n    }\r\n\r\n\r\n    const Submit = async () => {\r\n\r\n        var token = localStorage.getItem(\"token\");\r\n\r\n        sethide(true);\r\n\r\n        setisLoading(true);\r\n\r\n\r\n        while (1) {\r\n\r\n            await CompilerService.getSolution(token).then((resp) => {\r\n\r\n                console.log(resp)\r\n\r\n                setsuccess(2)\r\n                setmessage(\"In Queue\")\r\n\r\n                if (resp.status.description !== \"Queue\" && resp.status.description !== \"Processing\") {\r\n\r\n                    setisLoading(false);\r\n                    sethide(false);\r\n\r\n\r\n\r\n                    if (resp.compile_output != null) {\r\n\r\n                        output.innerHTML = output.innerHTML + b64DecodeUnicode(resp.compile_output) + \"\\n\";\r\n\r\n                    } else if (resp.stderr != null) {\r\n\r\n                        output.innerHTML = output.innerHTML + b64DecodeUnicode(resp.stderr) + \"\\n\";\r\n\r\n                    } else {\r\n\r\n                        output.innerHTML = output.innerHTML + resp.status.description + \"\\n\";\r\n\r\n                        if (resp.status.description === \"Wrong Answer\" || resp.status.description === \"Compilation Error\" || resp.status.description === \"Time Limit Exceeded\") {\r\n\r\n                            setsuccess(0)\r\n                            setmessage(resp.status.description);\r\n\r\n                        } else if (resp.status.description === \"Accepted\") {\r\n                            setsuccess(1)\r\n                            setmessage(resp.status.description);\r\n                        } else {\r\n                            setsuccess(2);\r\n                            setmessage(resp.status.description);\r\n                        }\r\n\r\n                        output.innerHTML = output.innerHTML + b64DecodeUnicode(resp.stdout) + \"\\n\";\r\n                    }\r\n                }\r\n\r\n            }, (error) => {\r\n\r\n            })\r\n\r\n            if (hide == false) {\r\n                break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n\r\n                isLoading ?\r\n                    <div className=\"Loader\">\r\n                        <CircularProgress />\r\n                    </div> : null\r\n            }\r\n\r\n            { success == 1 ? <Alertdism setsucess={setsuccess} theme={\"success\"} content={\"Accepted\"} heading={\"Success\"} /> :\r\n\r\n                success == 0 ? <Alertdism setsucess={setsuccess} theme={\"danger\"} content={message} heading={\"Failure\"} /> :\r\n\r\n                    success == 2 ? <Alertdism setsucess={setsuccess} theme={\"primary\"} content={message} heading={\"In Queue\"} /> : null\r\n            }\r\n\r\n\r\n            <Card className=\"text-center\">\r\n                <Card.Body>\r\n                    <Card.Title>Compiler</Card.Title>\r\n\r\n                    <Form id=\"myForm\" className=\"form\" onSubmit={handleClick}>\r\n\r\n                        <Form.Group as={Row} controlId=\"Form.SelectCustom\">\r\n                            <Form.Label column sm={2} >Select Language</Form.Label>\r\n                            <Col sm={10}>\r\n                                <Form.Control disabled={hide} as=\"select\" custom >\r\n                                    <option value=\"52\">C</option>\r\n                                    <option value=\"52\">C++</option>\r\n                                    <option value=\"4\">Java</option>\r\n                                    <option value=\"10\">Python</option>\r\n                                </Form.Control>\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n\r\n                        <Form.Group controlId=\"Form.ControlContent\">\r\n                            <Form.Label >Source</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={15} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"Form.ControlContent\">\r\n                            <Form.Label >Input</Form.Label>\r\n                            <Form.Control disabled={hide} as=\"textarea\" rows={5} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"Form.ControlOutput\">\r\n                            <Form.Label >Output</Form.Label>\r\n                            <Form.Control disabled={hide} as=\"textarea\" rows={5} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row}>\r\n                            <Col sm={{ span: 1 }}>\r\n                                <Button disabled={hide} variant=\"danger\" type=\"submit\">Run</Button>\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row}>\r\n                            <Col sm={{ span: 1 }}>\r\n                                <Button disabled={hide} onClick={Submit} >Submit</Button>\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n\r\n                    </Form>\r\n\r\n                </Card.Body>\r\n            </Card>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Compiler\r\n","F:\\BE-Pro\\BEProject\\frontend\\src\\DiscussAnswer.js",[],"F:\\BE-Pro\\BEProject\\frontend\\src\\services\\compiler.service.js",[],"F:\\BE-Pro\\BEProject\\frontend\\src\\CContest.js",["352","353"],"import React, { useState, useEffect } from 'react'\r\nimport ContestService from './services/contest.service'\r\nimport { Card, ListGroup } from 'react-bootstrap'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Pbm from './Problem.js'\r\n\r\nfunction CContest({ ccid }) {\r\n\r\n    const [isLoading, setisLoading] = useState(false)\r\n    const [problem, setproblem] = useState(null)\r\n\r\n    var cp_id = ccid;\r\n    console.log(cp_id);\r\n    useEffect(() => {\r\n        setisLoading(true)\r\n        ContestService.getcproblem(cp_id).then((response) => {\r\n            setisLoading(false)\r\n        }, (error) => {\r\n\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log(problem)\r\n    }, [problem])\r\n\r\n\r\n    function handleClick(cont) {\r\n\r\n\r\n        setproblem(cont);\r\n\r\n        console.log(problem)\r\n\r\n    }\r\n\r\n       if( problem != null)\r\n       {\r\n        return <Pbm name={problem.cont.problem_name} tags={problem.cont.problem_tags}  statement={problem.cont.problem_statement} exampl={problem.cont. problem_io} constraints={problem.cont.problem_con} txtcase={problem.cont.problem_test}/>\r\n    \r\n       }\r\n       else{\r\n        return (\r\n            <div>\r\n                {\r\n                    isLoading ?\r\n                        <div className=\"Loader\">\r\n                            <CircularProgress />\r\n                        </div> : null\r\n                }\r\n                \r\n                < Card >\r\n               \r\n                    <Card.Header> {ccid}</Card.Header>\r\n                    \r\n                </Card>\r\n                <br></br>\r\n                < Card >\r\n                    <Card.Header>Problem Set</Card.Header>\r\n                    <ListGroup variant=\"flush\">\r\n                        {localStorage.getItem(cp_id) && JSON.parse(localStorage.getItem(cp_id)).map(cont => <ListGroup.Item action onClick={() => handleClick({ cont })} disabled={isLoading} >{cont.problem_name}</ListGroup.Item>)}\r\n                    </ListGroup>\r\n                </Card>\r\n\r\n\r\n            </div >\r\n        )\r\n       }\r\n    \r\n}\r\n\r\nexport default CContest\r\n","F:\\BE-Pro\\BEProject\\frontend\\src\\Homepage.js",["354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371"],{"ruleId":"372","replacedBy":"373"},{"ruleId":"374","replacedBy":"375"},{"ruleId":"376","severity":1,"message":"377","line":15,"column":8,"nodeType":"378","messageId":"379","endLine":15,"endColumn":15},{"ruleId":"376","severity":1,"message":"380","line":22,"column":7,"nodeType":"378","messageId":"379","endLine":22,"endColumn":14},{"ruleId":"376","severity":1,"message":"381","line":23,"column":10,"nodeType":"378","messageId":"379","endLine":23,"endColumn":14},{"ruleId":"376","severity":1,"message":"382","line":1,"column":17,"nodeType":"378","messageId":"379","endLine":1,"endColumn":26},{"ruleId":"376","severity":1,"message":"383","line":2,"column":10,"nodeType":"378","messageId":"379","endLine":2,"endColumn":13},{"ruleId":"384","severity":1,"message":"385","line":25,"column":78,"nodeType":"386","messageId":"387","endLine":25,"endColumn":80},{"ruleId":"376","severity":1,"message":"388","line":3,"column":40,"nodeType":"378","messageId":"379","endLine":3,"endColumn":45},{"ruleId":"384","severity":1,"message":"389","line":40,"column":46,"nodeType":"386","messageId":"387","endLine":40,"endColumn":48},{"ruleId":"384","severity":1,"message":"385","line":42,"column":34,"nodeType":"386","messageId":"387","endLine":42,"endColumn":36},{"ruleId":"384","severity":1,"message":"385","line":44,"column":37,"nodeType":"386","messageId":"387","endLine":44,"endColumn":39},{"ruleId":"390","severity":1,"message":"391","line":36,"column":112,"nodeType":"392","messageId":"393","endLine":36,"endColumn":114},{"ruleId":"390","severity":1,"message":"391","line":56,"column":112,"nodeType":"392","messageId":"393","endLine":56,"endColumn":114},{"ruleId":"394","severity":1,"message":"395","line":91,"column":8,"nodeType":"396","endLine":91,"endColumn":10,"suggestions":"397"},{"ruleId":"376","severity":1,"message":"398","line":2,"column":32,"nodeType":"378","messageId":"379","endLine":2,"endColumn":38},{"ruleId":"376","severity":1,"message":"399","line":1,"column":17,"nodeType":"378","messageId":"379","endLine":1,"endColumn":25},{"ruleId":"376","severity":1,"message":"400","line":2,"column":10,"nodeType":"378","messageId":"379","endLine":2,"endColumn":14},{"ruleId":"376","severity":1,"message":"383","line":2,"column":22,"nodeType":"378","messageId":"379","endLine":2,"endColumn":25},{"ruleId":"376","severity":1,"message":"401","line":2,"column":27,"nodeType":"378","messageId":"379","endLine":2,"endColumn":30},{"ruleId":"376","severity":1,"message":"398","line":2,"column":32,"nodeType":"378","messageId":"379","endLine":2,"endColumn":38},{"ruleId":"376","severity":1,"message":"402","line":3,"column":8,"nodeType":"378","messageId":"379","endLine":3,"endColumn":24},{"ruleId":"394","severity":1,"message":"403","line":24,"column":9,"nodeType":"404","endLine":24,"endColumn":40},{"ruleId":"384","severity":1,"message":"385","line":123,"column":45,"nodeType":"386","messageId":"387","endLine":123,"endColumn":47},{"ruleId":"394","severity":1,"message":"405","line":143,"column":8,"nodeType":"396","endLine":143,"endColumn":10,"suggestions":"406"},{"ruleId":"376","severity":1,"message":"380","line":40,"column":9,"nodeType":"378","messageId":"379","endLine":40,"endColumn":16},{"ruleId":"384","severity":1,"message":"385","line":75,"column":22,"nodeType":"386","messageId":"387","endLine":75,"endColumn":24},{"ruleId":"384","severity":1,"message":"385","line":77,"column":25,"nodeType":"386","messageId":"387","endLine":77,"endColumn":27},{"ruleId":"384","severity":1,"message":"385","line":77,"column":22,"nodeType":"386","messageId":"387","endLine":77,"endColumn":24},{"ruleId":"384","severity":1,"message":"385","line":79,"column":25,"nodeType":"386","messageId":"387","endLine":79,"endColumn":27},{"ruleId":"376","severity":1,"message":"407","line":8,"column":19,"nodeType":"378","messageId":"379","endLine":8,"endColumn":27},{"ruleId":"372","replacedBy":"408"},{"ruleId":"374","replacedBy":"409"},{"ruleId":"376","severity":1,"message":"382","line":1,"column":27,"nodeType":"378","messageId":"379","endLine":1,"endColumn":36},{"ruleId":"376","severity":1,"message":"388","line":3,"column":40,"nodeType":"378","messageId":"379","endLine":3,"endColumn":45},{"ruleId":"384","severity":1,"message":"389","line":42,"column":46,"nodeType":"386","messageId":"387","endLine":42,"endColumn":48},{"ruleId":"384","severity":1,"message":"385","line":45,"column":35,"nodeType":"386","messageId":"387","endLine":45,"endColumn":37},{"ruleId":"384","severity":1,"message":"385","line":47,"column":37,"nodeType":"386","messageId":"387","endLine":47,"endColumn":39},{"ruleId":"376","severity":1,"message":"410","line":55,"column":81,"nodeType":"378","messageId":"379","endLine":55,"endColumn":88},{"ruleId":"384","severity":1,"message":"385","line":168,"column":32,"nodeType":"386","messageId":"387","endLine":168,"endColumn":34},{"ruleId":"384","severity":1,"message":"385","line":176,"column":23,"nodeType":"386","messageId":"387","endLine":176,"endColumn":25},{"ruleId":"384","severity":1,"message":"385","line":178,"column":25,"nodeType":"386","messageId":"387","endLine":178,"endColumn":27},{"ruleId":"411","severity":1,"message":"412","line":36,"column":139,"nodeType":"413","messageId":"414","endLine":36,"endColumn":163,"fix":"415"},{"ruleId":"376","severity":1,"message":"382","line":1,"column":27,"nodeType":"378","messageId":"379","endLine":1,"endColumn":36},{"ruleId":"384","severity":1,"message":"385","line":113,"column":22,"nodeType":"386","messageId":"387","endLine":113,"endColumn":24},{"ruleId":"384","severity":1,"message":"385","line":130,"column":23,"nodeType":"386","messageId":"387","endLine":130,"endColumn":25},{"ruleId":"384","severity":1,"message":"385","line":132,"column":25,"nodeType":"386","messageId":"387","endLine":132,"endColumn":27},{"ruleId":"384","severity":1,"message":"385","line":134,"column":29,"nodeType":"386","messageId":"387","endLine":134,"endColumn":31},{"ruleId":"372","replacedBy":"416"},{"ruleId":"374","replacedBy":"417"},{"ruleId":"376","severity":1,"message":"377","line":15,"column":8,"nodeType":"378","messageId":"379","endLine":15,"endColumn":15},{"ruleId":"376","severity":1,"message":"380","line":22,"column":7,"nodeType":"378","messageId":"379","endLine":22,"endColumn":14},{"ruleId":"376","severity":1,"message":"381","line":23,"column":10,"nodeType":"378","messageId":"379","endLine":23,"endColumn":14},{"ruleId":"376","severity":1,"message":"418","line":3,"column":24,"nodeType":"378","messageId":"379","endLine":3,"endColumn":35},{"ruleId":"376","severity":1,"message":"419","line":6,"column":10,"nodeType":"378","messageId":"379","endLine":6,"endColumn":18},{"ruleId":"384","severity":1,"message":"389","line":26,"column":12,"nodeType":"386","messageId":"387","endLine":26,"endColumn":14},{"ruleId":"384","severity":1,"message":"389","line":26,"column":32,"nodeType":"386","messageId":"387","endLine":26,"endColumn":34},{"ruleId":"390","severity":1,"message":"391","line":43,"column":116,"nodeType":"392","messageId":"393","endLine":43,"endColumn":118},{"ruleId":"390","severity":1,"message":"391","line":63,"column":116,"nodeType":"392","messageId":"393","endLine":63,"endColumn":118},{"ruleId":"394","severity":1,"message":"395","line":99,"column":8,"nodeType":"396","endLine":99,"endColumn":10,"suggestions":"420"},{"ruleId":"376","severity":1,"message":"398","line":2,"column":32,"nodeType":"378","messageId":"379","endLine":2,"endColumn":38},{"ruleId":"376","severity":1,"message":"388","line":3,"column":40,"nodeType":"378","messageId":"379","endLine":3,"endColumn":45},{"ruleId":"384","severity":1,"message":"389","line":40,"column":46,"nodeType":"386","messageId":"387","endLine":40,"endColumn":48},{"ruleId":"384","severity":1,"message":"385","line":42,"column":34,"nodeType":"386","messageId":"387","endLine":42,"endColumn":36},{"ruleId":"384","severity":1,"message":"385","line":44,"column":37,"nodeType":"386","messageId":"387","endLine":44,"endColumn":39},{"ruleId":"376","severity":1,"message":"382","line":1,"column":27,"nodeType":"378","messageId":"379","endLine":1,"endColumn":36},{"ruleId":"376","severity":1,"message":"388","line":3,"column":40,"nodeType":"378","messageId":"379","endLine":3,"endColumn":45},{"ruleId":"384","severity":1,"message":"389","line":42,"column":46,"nodeType":"386","messageId":"387","endLine":42,"endColumn":48},{"ruleId":"384","severity":1,"message":"385","line":45,"column":35,"nodeType":"386","messageId":"387","endLine":45,"endColumn":37},{"ruleId":"384","severity":1,"message":"385","line":47,"column":37,"nodeType":"386","messageId":"387","endLine":47,"endColumn":39},{"ruleId":"376","severity":1,"message":"410","line":55,"column":81,"nodeType":"378","messageId":"379","endLine":55,"endColumn":88},{"ruleId":"384","severity":1,"message":"385","line":168,"column":32,"nodeType":"386","messageId":"387","endLine":168,"endColumn":34},{"ruleId":"384","severity":1,"message":"385","line":176,"column":23,"nodeType":"386","messageId":"387","endLine":176,"endColumn":25},{"ruleId":"384","severity":1,"message":"385","line":178,"column":25,"nodeType":"386","messageId":"387","endLine":178,"endColumn":27},{"ruleId":"411","severity":1,"message":"412","line":36,"column":139,"nodeType":"413","messageId":"414","endLine":36,"endColumn":163,"fix":"421"},{"ruleId":"394","severity":1,"message":"403","line":24,"column":9,"nodeType":"404","endLine":24,"endColumn":40},{"ruleId":"384","severity":1,"message":"385","line":123,"column":45,"nodeType":"386","messageId":"387","endLine":123,"endColumn":47},{"ruleId":"394","severity":1,"message":"405","line":143,"column":8,"nodeType":"396","endLine":143,"endColumn":10,"suggestions":"422"},{"ruleId":"376","severity":1,"message":"382","line":1,"column":17,"nodeType":"378","messageId":"379","endLine":1,"endColumn":26},{"ruleId":"376","severity":1,"message":"383","line":2,"column":10,"nodeType":"378","messageId":"379","endLine":2,"endColumn":13},{"ruleId":"384","severity":1,"message":"385","line":25,"column":78,"nodeType":"386","messageId":"387","endLine":25,"endColumn":80},{"ruleId":"376","severity":1,"message":"380","line":40,"column":9,"nodeType":"378","messageId":"379","endLine":40,"endColumn":16},{"ruleId":"384","severity":1,"message":"385","line":75,"column":22,"nodeType":"386","messageId":"387","endLine":75,"endColumn":24},{"ruleId":"384","severity":1,"message":"385","line":77,"column":25,"nodeType":"386","messageId":"387","endLine":77,"endColumn":27},{"ruleId":"384","severity":1,"message":"385","line":77,"column":22,"nodeType":"386","messageId":"387","endLine":77,"endColumn":24},{"ruleId":"384","severity":1,"message":"385","line":79,"column":25,"nodeType":"386","messageId":"387","endLine":79,"endColumn":27},{"ruleId":"376","severity":1,"message":"399","line":1,"column":17,"nodeType":"378","messageId":"379","endLine":1,"endColumn":25},{"ruleId":"376","severity":1,"message":"400","line":2,"column":10,"nodeType":"378","messageId":"379","endLine":2,"endColumn":14},{"ruleId":"376","severity":1,"message":"383","line":2,"column":22,"nodeType":"378","messageId":"379","endLine":2,"endColumn":25},{"ruleId":"376","severity":1,"message":"401","line":2,"column":27,"nodeType":"378","messageId":"379","endLine":2,"endColumn":30},{"ruleId":"376","severity":1,"message":"398","line":2,"column":32,"nodeType":"378","messageId":"379","endLine":2,"endColumn":38},{"ruleId":"376","severity":1,"message":"402","line":3,"column":8,"nodeType":"378","messageId":"379","endLine":3,"endColumn":24},{"ruleId":"376","severity":1,"message":"382","line":1,"column":27,"nodeType":"378","messageId":"379","endLine":1,"endColumn":36},{"ruleId":"384","severity":1,"message":"385","line":113,"column":22,"nodeType":"386","messageId":"387","endLine":113,"endColumn":24},{"ruleId":"384","severity":1,"message":"385","line":130,"column":23,"nodeType":"386","messageId":"387","endLine":130,"endColumn":25},{"ruleId":"384","severity":1,"message":"385","line":132,"column":25,"nodeType":"386","messageId":"387","endLine":132,"endColumn":27},{"ruleId":"384","severity":1,"message":"385","line":134,"column":29,"nodeType":"386","messageId":"387","endLine":134,"endColumn":31},{"ruleId":"394","severity":1,"message":"423","line":21,"column":8,"nodeType":"396","endLine":21,"endColumn":10,"suggestions":"424"},{"ruleId":"411","severity":1,"message":"412","line":39,"column":139,"nodeType":"413","messageId":"414","endLine":39,"endColumn":163,"fix":"425"},{"ruleId":"376","severity":1,"message":"426","line":2,"column":10,"nodeType":"378","messageId":"379","endLine":2,"endColumn":14},{"ruleId":"376","severity":1,"message":"383","line":2,"column":16,"nodeType":"378","messageId":"379","endLine":2,"endColumn":19},{"ruleId":"376","severity":1,"message":"401","line":2,"column":21,"nodeType":"378","messageId":"379","endLine":2,"endColumn":24},{"ruleId":"376","severity":1,"message":"400","line":2,"column":26,"nodeType":"378","messageId":"379","endLine":2,"endColumn":30},{"ruleId":"376","severity":1,"message":"398","line":2,"column":32,"nodeType":"378","messageId":"379","endLine":2,"endColumn":38},{"ruleId":"376","severity":1,"message":"427","line":2,"column":40,"nodeType":"378","messageId":"379","endLine":2,"endColumn":49},{"ruleId":"376","severity":1,"message":"428","line":3,"column":8,"nodeType":"378","messageId":"379","endLine":3,"endColumn":21},{"ruleId":"376","severity":1,"message":"429","line":4,"column":8,"nodeType":"378","messageId":"379","endLine":4,"endColumn":17},{"ruleId":"376","severity":1,"message":"430","line":5,"column":10,"nodeType":"378","messageId":"379","endLine":5,"endColumn":18},{"ruleId":"431","severity":1,"message":"432","line":43,"column":13,"nodeType":"433","endLine":43,"endColumn":46},{"ruleId":"431","severity":1,"message":"432","line":258,"column":53,"nodeType":"433","endLine":258,"endColumn":96},{"ruleId":"431","severity":1,"message":"432","line":271,"column":53,"nodeType":"433","endLine":271,"endColumn":96},{"ruleId":"431","severity":1,"message":"432","line":284,"column":53,"nodeType":"433","endLine":284,"endColumn":96},{"ruleId":"431","severity":1,"message":"432","line":342,"column":21,"nodeType":"433","endLine":342,"endColumn":33},{"ruleId":"431","severity":1,"message":"432","line":343,"column":21,"nodeType":"433","endLine":343,"endColumn":33},{"ruleId":"431","severity":1,"message":"432","line":344,"column":21,"nodeType":"433","endLine":344,"endColumn":33},{"ruleId":"431","severity":1,"message":"432","line":345,"column":21,"nodeType":"433","endLine":345,"endColumn":33},{"ruleId":"431","severity":1,"message":"432","line":346,"column":21,"nodeType":"433","endLine":346,"endColumn":33},"no-native-reassign",["434"],"no-negated-in-lhs",["435"],"no-unused-vars","'Content' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","'user' is assigned a value but never used.","'useEffect' is defined but never used.","'Row' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Alert' is defined but never used.","Expected '!==' and instead saw '!='.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'timestamp'. Either include it or remove the dependency array.","ArrayExpression",["436"],"'Button' is defined but never used.","'useState' is defined but never used.","'Form' is defined but never used.","'Col' is defined but never used.","'CircularProgress' is defined but never used.","React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","React Hook useEffect has a missing dependency: 'discussId'. Either include it or remove the dependency array. If 'setdiscussion' needs the current value of 'discussId', you can also switch to useReducer instead of useState and read 'discussId' in the reducer.",["437"],"'setclick' is assigned a value but never used.",["434"],["435"],"'msgform' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property problem_io.","MemberExpression","unexpectedWhitespace",{"range":"438","text":"439"},["434"],["435"],"'CardColumns' is defined but never used.","'duration' is defined but never used.",["440"],{"range":"441","text":"439"},["442"],"React Hook useEffect has a missing dependency: 'cp_id'. Either include it or remove the dependency array.",["443"],{"range":"444","text":"439"},"'Card' is defined but never used.","'Container' is defined but never used.","'DoughnutGraph' is defined but never used.","'LineGraph' is defined but never used.","'Redirect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"445","fix":"446"},{"desc":"447","fix":"448"},[990,992],".",{"desc":"445","fix":"449"},[990,992],{"desc":"447","fix":"450"},{"desc":"451","fix":"452"},[1024,1026],"Update the dependencies array to be: [timestamp]",{"range":"453","text":"454"},"Update the dependencies array to be: [discussId]",{"range":"455","text":"456"},{"range":"457","text":"454"},{"range":"458","text":"456"},"Update the dependencies array to be: [cp_id]",{"range":"459","text":"460"},[2749,2751],"[timestamp]",[4705,4707],"[discussId]",[3090,3092],[4705,4707],[644,646],"[cp_id]"]